FUNC is_digit 1 ch 22
FUNC is_alpha 1 ch 31
FUNC is_alnum 1 ch 52
FUNC read_number 2 src i 59
FUNC read_binary 2 src i 99
FUNC read_ident 2 src i 146
FUNC tokenize 1 src 176
FUNC parse 1 source 977
FUNC parse_program 2 tokens i 989
FUNC parse_statement 2 tokens i 1022
FUNC parse_block 2 tokens i 1632
FUNC parse_expression 2 tokens i 1683
FUNC parse_or 2 tokens i 1687
FUNC parse_and 2 tokens i 1746
FUNC parse_comparison 2 tokens i 1805
FUNC parse_add_sub 2 tokens i 1982
FUNC parse_term 2 tokens i 2071
FUNC parse_shift 2 tokens i 2182
FUNC parse_bit_and 2 tokens i 2271
FUNC parse_bit_xor 2 tokens i 2330
FUNC parse_bit_or 2 tokens i 2389
FUNC parse_factor 2 tokens i 2448
FUNC lookup_var 2 env name 3112
FUNC env_set 3 env name value 3183
FUNC copy_env 1 env 3228
FUNC normalize_path 1 path 3258
FUNC dirname 1 path 3294
FUNC join_path 2 base rel 3330
FUNC call_function 3 func arg_values env 3553
FUNC import_module 1 path 3699
FUNC eval_expr 2 expr env 4038
FUNC execute 3 stmts env is_global 4667
FUNC run 1 source 5077
FUNC run_file_with_args 2 path file_args 5119
FUNC run_file 1 path 5287
PUSH_INT 0
STORE tok_len
BUILD_LIST 0
STORE global_env
PUSH_STR "."
STORE current_dir
PUSH_STR "<stdin>"
STORE module_file
BUILD_LIST 0
STORE loaded_modules
LOAD args
BUILTIN length 1
PUSH_INT 0
GT
JUMP_IF_FALSE 21
LOAD args
PUSH_INT 0
INDEX
CALL run_file
POP
JUMP 21
HALT
LOAD ch
PUSH_STR "0"
GE
LOAD ch
PUSH_STR "9"
LE
AND
RET
RET
LOAD ch
PUSH_STR "a"
GE
LOAD ch
PUSH_STR "z"
LE
AND
LOAD ch
PUSH_STR "A"
GE
LOAD ch
PUSH_STR "Z"
LE
AND
OR
LOAD ch
PUSH_STR "_"
EQ
OR
RET
RET
LOAD ch
CALL is_alpha
LOAD ch
CALL is_digit
OR
RET
RET
PUSH_INT 0
STORE num
PUSH_STR ""
STORE c
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
CALL is_digit
AND
JUMP_IF_FALSE 94
LOAD src
LOAD i
INDEX
STORE c
LOAD num
PUSH_INT 10
MUL
LOAD c
BUILTIN ascii 1
ADD
PUSH_STR "0"
BUILTIN ascii 1
SUB
STORE num
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 66
LOAD num
LOAD i
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE num
PUSH_STR ""
STORE c
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
PUSH_STR "0"
EQ
LOAD src
LOAD i
INDEX
PUSH_STR "1"
EQ
OR
AND
JUMP_IF_FALSE 141
LOAD src
LOAD i
INDEX
STORE c
LOAD num
PUSH_INT 2
MUL
LOAD c
BUILTIN ascii 1
ADD
PUSH_STR "0"
BUILTIN ascii 1
SUB
STORE num
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 106
LOAD num
LOAD i
BUILD_LIST 2
RET
RET
PUSH_STR ""
STORE s
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
CALL is_alnum
AND
JUMP_IF_FALSE 171
LOAD s
LOAD src
LOAD i
INDEX
ADD
STORE s
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 151
LOAD s
LOAD i
BUILD_LIST 2
RET
RET
BUILD_DICT 0
STORE tokens
PUSH_INT 0
STORE n
PUSH_INT 0
STORE i
PUSH_STR ""
STORE c
BUILD_LIST 0
STORE res
PUSH_STR ""
STORE word
PUSH_STR ""
STORE s
LOAD src
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD src
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD src
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD src
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 266
PUSH_INT 6
STORE i
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\r"
EQ
AND
JUMP_IF_FALSE 250
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 250
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 265
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 265
JUMP 266
LOAD i
LOAD src_len
LT
JUMP_IF_FALSE 972
LOAD src
LOAD i
INDEX
STORE c
LOAD c
PUSH_STR " "
EQ
LOAD c
PUSH_STR "\t"
EQ
OR
LOAD c
PUSH_STR "\r"
EQ
OR
LOAD c
PUSH_STR "\n"
EQ
OR
JUMP_IF_FALSE 295
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "#"
EQ
JUMP_IF_FALSE 315
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\n"
NE
AND
JUMP_IF_FALSE 314
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 299
JUMP 971
LOAD c
PUSH_STR ":"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 348
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ":="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR ":"
EQ
JUMP_IF_FALSE 367
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ":"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "="
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 400
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "=="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "!"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 433
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "!="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "<"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 466
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "<="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR ">"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 499
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ">="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "<"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "<"
EQ
AND
JUMP_IF_FALSE 532
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "<<"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR ">"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR ">"
EQ
AND
JUMP_IF_FALSE 565
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ">>"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "/"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "*"
EQ
AND
JUMP_IF_FALSE 617
LOAD i
PUSH_INT 2
ADD
STORE i
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "*"
NE
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "/"
NE
OR
AND
JUMP_IF_FALSE 612
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 587
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "("
EQ
LOAD c
PUSH_STR ")"
EQ
OR
LOAD c
PUSH_STR "{"
EQ
OR
LOAD c
PUSH_STR "}"
EQ
OR
LOAD c
PUSH_STR ","
EQ
OR
LOAD c
PUSH_STR "+"
EQ
OR
LOAD c
PUSH_STR "-"
EQ
OR
LOAD c
PUSH_STR "*"
EQ
OR
LOAD c
PUSH_STR "/"
EQ
OR
LOAD c
PUSH_STR "%"
EQ
OR
LOAD c
PUSH_STR "<"
EQ
OR
LOAD c
PUSH_STR ">"
EQ
OR
LOAD c
PUSH_STR "["
EQ
OR
LOAD c
PUSH_STR "]"
EQ
OR
LOAD c
PUSH_STR "&"
EQ
OR
LOAD c
PUSH_STR "|"
EQ
OR
LOAD c
PUSH_STR "^"
EQ
OR
LOAD c
PUSH_STR "~"
EQ
OR
LOAD c
PUSH_STR "."
EQ
OR
JUMP_IF_FALSE 708
LOAD tokens
LOAD n
PUSH_STR "symbol"
LOAD c
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 971
LOAD c
PUSH_STR "0"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "b"
EQ
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "B"
EQ
OR
AND
JUMP_IF_FALSE 759
LOAD i
PUSH_INT 2
ADD
STORE i
LOAD src
LOAD i
CALL read_binary
STORE res
LOAD tokens
LOAD n
PUSH_STR "number"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD res
PUSH_INT 1
INDEX
STORE i
JUMP 971
LOAD c
CALL is_digit
JUMP_IF_FALSE 783
LOAD src
LOAD i
CALL read_number
STORE res
LOAD tokens
LOAD n
PUSH_STR "number"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD res
PUSH_INT 1
INDEX
STORE i
JUMP 971
LOAD c
PUSH_STR "\""
EQ
JUMP_IF_FALSE 852
LOAD i
PUSH_INT 1
ADD
STORE i
PUSH_STR ""
STORE s
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\""
NE
AND
JUMP_IF_FALSE 837
LOAD src
LOAD i
INDEX
PUSH_STR "\\"
EQ
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "n"
EQ
AND
JUMP_IF_FALSE 826
LOAD s
PUSH_STR "\n"
ADD
STORE s
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 836
LOAD s
LOAD src
LOAD i
INDEX
ADD
STORE s
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 793
LOAD i
PUSH_INT 1
ADD
STORE i
LOAD tokens
LOAD n
PUSH_STR "string"
LOAD s
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 971
LOAD src
LOAD i
CALL read_ident
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE word
LOAD res
PUSH_INT 1
INDEX
STORE i
LOAD word
PUSH_STR "alloc"
EQ
LOAD word
PUSH_STR "emit"
EQ
OR
LOAD word
PUSH_STR "proc"
EQ
OR
LOAD word
PUSH_STR "return"
EQ
OR
LOAD word
PUSH_STR "if"
EQ
OR
LOAD word
PUSH_STR "else"
EQ
OR
LOAD word
PUSH_STR "elif"
EQ
OR
LOAD word
PUSH_STR "loop"
EQ
OR
LOAD word
PUSH_STR "break"
EQ
OR
LOAD word
PUSH_STR "and"
EQ
OR
LOAD word
PUSH_STR "or"
EQ
OR
LOAD word
PUSH_STR "facts"
EQ
OR
LOAD word
PUSH_STR "import"
EQ
OR
LOAD word
PUSH_STR "as"
EQ
OR
JUMP_IF_FALSE 931
LOAD tokens
LOAD n
PUSH_STR "kw"
LOAD word
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 971
LOAD word
PUSH_STR "true"
EQ
JUMP_IF_FALSE 946
LOAD tokens
LOAD n
PUSH_STR "bool"
PUSH_BOOL 1
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 971
LOAD word
PUSH_STR "false"
EQ
JUMP_IF_FALSE 961
LOAD tokens
LOAD n
PUSH_STR "bool"
PUSH_BOOL 0
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 971
LOAD tokens
LOAD n
PUSH_STR "ident"
LOAD word
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 266
LOAD n
STORE tok_len
LOAD tokens
RET
RET
LOAD source
CALL tokenize
STORE tokens
LOAD tokens
PUSH_INT 0
CALL parse_program
STORE res
LOAD res
PUSH_INT 0
INDEX
RET
RET
BUILD_LIST 0
STORE stmts
PUSH_BOOL 0
LOAD i
BUILD_LIST 2
STORE res
LOAD res
PUSH_INT 1
INDEX
LOAD tok_len
LT
JUMP_IF_FALSE 1015
LOAD tokens
LOAD res
PUSH_INT 1
INDEX
CALL parse_statement
STORE res
LOAD stmts
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE stmts
JUMP 995
LOAD stmts
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
INDEX
STORE t
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "alloc"
EQ
AND
JUMP_IF_FALSE 1064
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
STORE name
LOAD tokens
LOAD i
PUSH_INT 3
ADD
CALL parse_expression
STORE res
PUSH_STR "decl"
LOAD name
PUSH_INT 1
INDEX
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "emit"
EQ
AND
JUMP_IF_FALSE 1093
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "emit"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "return"
EQ
AND
JUMP_IF_FALSE 1122
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "return"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "break"
EQ
AND
JUMP_IF_FALSE 1142
PUSH_STR "break"
BUILD_LIST 1
LOAD i
PUSH_INT 1
ADD
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "loop"
EQ
AND
JUMP_IF_FALSE 1180
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res_cond
LOAD tokens
LOAD res_cond
PUSH_INT 1
INDEX
CALL parse_block
STORE res_block
PUSH_STR "loop"
LOAD res_cond
PUSH_INT 0
INDEX
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res_block
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "if"
EQ
AND
JUMP_IF_FALSE 1349
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res_cond
LOAD tokens
LOAD res_cond
PUSH_INT 1
INDEX
CALL parse_block
STORE res_then
LOAD res_then
PUSH_INT 1
INDEX
STORE j
BUILD_LIST 0
STORE elifs
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res_elif
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res_block
BUILD_LIST 0
STORE else_block
PUSH_INT 0
STORE k
PUSH_BOOL 0
STORE pair
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "elif"
EQ
AND
JUMP_IF_FALSE 1272
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE res_elif
LOAD tokens
LOAD res_elif
PUSH_INT 1
INDEX
CALL parse_block
STORE res_block
LOAD elifs
LOAD res_elif
PUSH_INT 0
INDEX
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE elifs
LOAD res_block
PUSH_INT 1
INDEX
STORE j
JUMP 1224
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "else"
EQ
AND
JUMP_IF_FALSE 1307
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_block
STORE res_block
LOAD res_block
PUSH_INT 0
INDEX
STORE else_block
LOAD res_block
PUSH_INT 1
INDEX
STORE j
JUMP 1307
LOAD elifs
BUILTIN length 1
PUSH_INT 1
SUB
STORE k
LOAD k
PUSH_INT 0
GE
JUMP_IF_FALSE 1336
LOAD elifs
LOAD k
INDEX
STORE pair
PUSH_STR "if"
LOAD pair
PUSH_INT 0
INDEX
LOAD pair
PUSH_INT 1
INDEX
LOAD else_block
BUILD_LIST 4
BUILD_LIST 1
STORE else_block
LOAD k
PUSH_INT 1
SUB
STORE k
JUMP 1312
PUSH_STR "if"
LOAD res_cond
PUSH_INT 0
INDEX
LOAD res_then
PUSH_INT 0
INDEX
LOAD else_block
BUILD_LIST 4
LOAD j
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "proc"
EQ
AND
JUMP_IF_FALSE 1451
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
STORE name
LOAD i
PUSH_INT 3
ADD
STORE j
BUILD_LIST 0
STORE params
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ")"
NE
OR
JUMP_IF_FALSE 1430
PUSH_BOOL 1
JUMP_IF_FALSE 1429
LOAD params
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE params
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 1427
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 1428
JUMP 1429
JUMP 1391
JUMP 1430
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
CALL parse_block
STORE res_block
PUSH_STR "func_def"
LOAD name
LOAD params
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD res_block
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "import"
EQ
AND
JUMP_IF_FALSE 1489
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
STORE path
LOAD tokens
LOAD i
PUSH_INT 3
ADD
INDEX
PUSH_INT 1
INDEX
STORE alias
PUSH_STR "import"
LOAD path
LOAD alias
BUILD_LIST 3
LOAD i
PUSH_INT 4
ADD
BUILD_LIST 2
RET
JUMP 1631
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "facts"
EQ
AND
JUMP_IF_FALSE 1518
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "facts"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1631
LOAD tokens
LOAD i
CALL parse_factor
STORE lval_res
LOAD lval_res
PUSH_INT 1
INDEX
STORE j
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ":="
EQ
AND
JUMP_IF_FALSE 1623
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE val_res
LOAD lval_res
PUSH_INT 0
INDEX
STORE target
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 1576
PUSH_STR "assign"
LOAD target
PUSH_INT 1
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1622
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "dot"
EQ
JUMP_IF_FALSE 1599
PUSH_STR "attr_assign"
LOAD target
PUSH_INT 1
INDEX
LOAD target
PUSH_INT 2
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1622
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "index"
EQ
JUMP_IF_FALSE 1622
PUSH_STR "index_assign"
LOAD target
PUSH_INT 1
INDEX
LOAD target
PUSH_INT 2
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1622
JUMP 1623
LOAD lval_res
PUSH_INT 0
INDEX
LOAD lval_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
RET
BUILD_LIST 0
STORE stmts
LOAD i
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "}"
NE
OR
JUMP_IF_FALSE 1676
LOAD tokens
LOAD j
CALL parse_statement
STORE res
LOAD stmts
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE stmts
LOAD res
PUSH_INT 1
INDEX
STORE j
JUMP 1644
LOAD stmts
LOAD j
PUSH_INT 1
ADD
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
TCALL parse_or
RET
LOAD tokens
LOAD i
CALL parse_and
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "or"
EQ
AND
JUMP_IF_FALSE 1741
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_and
STORE right_res
PUSH_STR "or"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1703
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_comparison
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "and"
EQ
AND
JUMP_IF_FALSE 1800
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_comparison
STORE right_res
PUSH_STR "and"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1762
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_or
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "=="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">"
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "!="
EQ
OR
AND
JUMP_IF_FALSE 1977
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_or
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<"
EQ
JUMP_IF_FALSE 1909
PUSH_STR "lt"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1972
LOAD op
PUSH_INT 1
INDEX
PUSH_STR ">"
EQ
JUMP_IF_FALSE 1923
PUSH_STR "gt"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1972
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<="
EQ
JUMP_IF_FALSE 1937
PUSH_STR "le"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1972
LOAD op
PUSH_INT 1
INDEX
PUSH_STR ">="
EQ
JUMP_IF_FALSE 1951
PUSH_STR "ge"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1972
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "=="
EQ
JUMP_IF_FALSE 1965
PUSH_STR "eq"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1972
PUSH_STR "ne"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1825
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_term
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "+"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "-"
EQ
OR
AND
JUMP_IF_FALSE 2066
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_term
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "+"
EQ
JUMP_IF_FALSE 2054
PUSH_STR "add"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2061
PUSH_STR "sub"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2002
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_factor
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "*"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "/"
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "%"
EQ
OR
AND
JUMP_IF_FALSE 2177
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_factor
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "*"
EQ
JUMP_IF_FALSE 2151
PUSH_STR "mul"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2172
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "/"
EQ
JUMP_IF_FALSE 2165
PUSH_STR "div"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2172
PUSH_STR "mod"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2091
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_add_sub
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<<"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">>"
EQ
OR
AND
JUMP_IF_FALSE 2266
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_add_sub
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<<"
EQ
JUMP_IF_FALSE 2254
PUSH_STR "shl"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2261
PUSH_STR "shr"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2202
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_shift
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "&"
EQ
AND
JUMP_IF_FALSE 2325
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_shift
STORE right_res
PUSH_STR "band"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2287
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_and
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "^"
EQ
AND
JUMP_IF_FALSE 2384
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_and
STORE right_res
PUSH_STR "bxor"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2346
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_xor
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "|"
EQ
AND
JUMP_IF_FALSE 2443
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_xor
STORE right_res
PUSH_STR "bor"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2405
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
INDEX
STORE t
PUSH_BOOL 0
STORE node
LOAD i
STORE j
PUSH_INT 0
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "-"
EQ
AND
JUMP_IF_FALSE 2492
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_factor
STORE res
PUSH_STR "unary"
PUSH_STR "sub"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "~"
EQ
AND
JUMP_IF_FALSE 2521
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_factor
STORE res
PUSH_STR "bitnot"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "number"
EQ
JUMP_IF_FALSE 2538
PUSH_STR "number"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "bool"
EQ
JUMP_IF_FALSE 2555
PUSH_STR "bool"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "string"
EQ
JUMP_IF_FALSE 2572
PUSH_STR "string"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 2589
PUSH_STR "ident"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "["
EQ
AND
JUMP_IF_FALSE 2677
BUILD_LIST 0
STORE elems
LOAD i
PUSH_INT 1
ADD
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR "]"
NE
OR
JUMP_IF_FALSE 2668
PUSH_BOOL 1
JUMP_IF_FALSE 2667
LOAD tokens
LOAD k
CALL parse_expression
STORE res
LOAD elems
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE elems
LOAD res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2665
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2666
JUMP 2667
JUMP 2627
JUMP 2668
PUSH_STR "list"
LOAD elems
BUILD_LIST 2
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "{"
EQ
AND
JUMP_IF_FALSE 2829
BUILD_LIST 0
STORE pairs
LOAD i
PUSH_INT 1
ADD
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE val_res
PUSH_STR "string"
PUSH_STR ""
BUILD_LIST 2
STORE key_node
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR "}"
NE
OR
JUMP_IF_FALSE 2820
PUSH_BOOL 1
JUMP_IF_FALSE 2819
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "string"
EQ
JUMP_IF_FALSE 2742
PUSH_STR "string"
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE key_node
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2775
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 2763
PUSH_STR "string"
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE key_node
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2775
LOAD tokens
LOAD k
CALL parse_expression
STORE val_res
LOAD val_res
PUSH_INT 0
INDEX
STORE key_node
LOAD val_res
PUSH_INT 1
INDEX
STORE k
LOAD k
PUSH_INT 1
ADD
STORE k
LOAD tokens
LOAD k
CALL parse_expression
STORE val_res
LOAD pairs
LOAD key_node
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE pairs
LOAD val_res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2817
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2818
JUMP 2819
JUMP 2719
JUMP 2820
PUSH_STR "dict"
LOAD pairs
BUILD_LIST 2
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 2866
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "("
EQ
AND
JUMP_IF_FALSE 2858
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE node
LOAD res
PUSH_INT 1
INDEX
PUSH_INT 1
ADD
STORE j
JUMP 2866
PUSH_STR "number"
PUSH_INT 0
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE inner
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE end_res
BUILD_LIST 0
STORE call_args
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE attr
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
JUMP_IF_FALSE 3107
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "("
EQ
JUMP_IF_FALSE 2977
LOAD j
PUSH_INT 1
ADD
STORE k
BUILD_LIST 0
STORE call_args
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ")"
NE
OR
JUMP_IF_FALSE 2967
PUSH_BOOL 1
JUMP_IF_FALSE 2966
LOAD tokens
LOAD k
CALL parse_expression
STORE res
LOAD call_args
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE call_args
LOAD res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2964
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2965
JUMP 2966
JUMP 2926
JUMP 2967
PUSH_STR "func_call"
LOAD node
LOAD call_args
BUILD_LIST 3
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 3106
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "["
EQ
JUMP_IF_FALSE 3079
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE inner
LOAD inner
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ":"
EQ
AND
JUMP_IF_FALSE 3067
LOAD tokens
LOAD k
PUSH_INT 1
ADD
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
PUSH_STR "]"
EQ
AND
JUMP_IF_FALSE 3044
PUSH_STR "slice"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
PUSH_BOOL 0
BUILD_LIST 4
STORE node
LOAD k
PUSH_INT 2
ADD
STORE j
JUMP 3066
LOAD tokens
LOAD k
PUSH_INT 1
ADD
CALL parse_expression
STORE end_res
PUSH_STR "slice"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
LOAD end_res
PUSH_INT 0
INDEX
BUILD_LIST 4
STORE node
LOAD end_res
PUSH_INT 1
INDEX
PUSH_INT 1
ADD
STORE j
JUMP 3078
PUSH_STR "index"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 3106
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "."
EQ
JUMP_IF_FALSE 3105
LOAD tokens
LOAD j
PUSH_INT 1
ADD
INDEX
STORE attr
PUSH_STR "dot"
LOAD node
LOAD attr
PUSH_INT 1
INDEX
BUILD_LIST 3
STORE node
LOAD j
PUSH_INT 2
ADD
STORE j
JUMP 3106
JUMP 3107
JUMP 2884
LOAD node
LOAD j
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3145
LOAD env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3140
PUSH_BOOL 1
LOAD entry
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 3140
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3119
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD global_env
BUILTIN length 1
STORE global_len
LOAD i
LOAD global_len
LT
JUMP_IF_FALSE 3178
LOAD global_env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3173
PUSH_BOOL 1
LOAD entry
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 3173
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3152
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3218
LOAD env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3213
LOAD env
LOAD i
LOAD name
LOAD value
BUILD_LIST 2
STORE_INDEX
LOAD env
RET
JUMP 3213
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3190
LOAD env
LOAD name
LOAD value
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE env
LOAD env
RET
RET
BUILD_LIST 0
STORE result
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3255
LOAD env
LOAD i
INDEX
STORE entry
LOAD result
LOAD entry
BUILD_LIST 1
ADD
STORE result
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3237
LOAD result
RET
RET
PUSH_STR ""
STORE res
PUSH_INT 0
STORE i
LOAD path
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
JUMP_IF_FALSE 3291
LOAD path
LOAD i
INDEX
PUSH_STR "\\"
EQ
JUMP_IF_FALSE 3280
LOAD res
PUSH_STR "/"
ADD
STORE res
JUMP 3286
LOAD res
LOAD path
LOAD i
INDEX
ADD
STORE res
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3265
LOAD res
RET
RET
LOAD path
CALL normalize_path
STORE path
LOAD path
BUILTIN length 1
PUSH_INT 1
SUB
STORE i
LOAD i
PUSH_INT 0
GE
LOAD path
LOAD i
INDEX
PUSH_STR "/"
NE
AND
JUMP_IF_FALSE 3317
LOAD i
PUSH_INT 1
SUB
STORE i
JUMP 3302
LOAD i
PUSH_INT 0
GE
JUMP_IF_FALSE 3327
LOAD path
PUSH_INT 0
LOAD i
SLICE
RET
JUMP 3327
PUSH_STR "."
RET
RET
LOAD base
CALL normalize_path
STORE base
LOAD rel
CALL normalize_path
STORE rel
PUSH_STR ""
STORE path
LOAD rel
BUILTIN length 1
PUSH_INT 0
GT
LOAD rel
PUSH_INT 0
INDEX
PUSH_STR "/"
EQ
AND
JUMP_IF_FALSE 3352
LOAD rel
STORE path
JUMP 3358
LOAD base
PUSH_STR "/"
ADD
LOAD rel
ADD
STORE path
BUILD_LIST 0
STORE parts
PUSH_STR ""
STORE part
PUSH_INT 0
STORE i
LOAD path
BUILTIN length 1
STORE n
PUSH_BOOL 0
STORE abs
LOAD n
PUSH_INT 0
GT
LOAD path
PUSH_INT 0
INDEX
PUSH_STR "/"
EQ
AND
JUMP_IF_FALSE 3382
PUSH_BOOL 1
STORE abs
JUMP 3382
LOAD i
LOAD n
LT
JUMP_IF_FALSE 3453
LOAD path
LOAD i
INDEX
PUSH_STR "/"
EQ
JUMP_IF_FALSE 3442
LOAD part
PUSH_STR ".."
EQ
JUMP_IF_FALSE 3425
LOAD parts
BUILTIN length 1
PUSH_INT 0
GT
LOAD parts
LOAD parts
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
PUSH_STR ".."
NE
AND
JUMP_IF_FALSE 3419
LOAD parts
PUSH_INT 0
LOAD parts
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE parts
JUMP 3424
LOAD parts
PUSH_STR ".."
BUILD_LIST 1
ADD
STORE parts
JUMP 3439
LOAD part
PUSH_STR ""
NE
LOAD part
PUSH_STR "."
NE
AND
JUMP_IF_FALSE 3439
LOAD parts
LOAD part
BUILD_LIST 1
ADD
STORE parts
JUMP 3439
PUSH_STR ""
STORE part
JUMP 3448
LOAD part
LOAD path
LOAD i
INDEX
ADD
STORE part
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3382
LOAD part
PUSH_STR ".."
EQ
JUMP_IF_FALSE 3486
LOAD parts
BUILTIN length 1
PUSH_INT 0
GT
LOAD parts
LOAD parts
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
PUSH_STR ".."
NE
AND
JUMP_IF_FALSE 3480
LOAD parts
PUSH_INT 0
LOAD parts
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE parts
JUMP 3485
LOAD parts
PUSH_STR ".."
BUILD_LIST 1
ADD
STORE parts
JUMP 3500
LOAD part
PUSH_STR ""
NE
LOAD part
PUSH_STR "."
NE
AND
JUMP_IF_FALSE 3500
LOAD parts
LOAD part
BUILD_LIST 1
ADD
STORE parts
JUMP 3500
PUSH_STR ""
STORE res
PUSH_INT 0
STORE i
LOAD parts
BUILTIN length 1
STORE p_len
LOAD i
LOAD p_len
LT
JUMP_IF_FALSE 3531
LOAD res
PUSH_STR ""
NE
JUMP_IF_FALSE 3520
LOAD res
PUSH_STR "/"
ADD
STORE res
JUMP 3520
LOAD res
LOAD parts
LOAD i
INDEX
ADD
STORE res
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3507
LOAD abs
JUMP_IF_FALSE 3538
PUSH_STR "/"
LOAD res
ADD
STORE res
JUMP 3538
LOAD res
PUSH_STR ""
EQ
JUMP_IF_FALSE 3550
LOAD abs
JUMP_IF_FALSE 3547
PUSH_STR "/"
RET
JUMP 3547
PUSH_STR "."
RET
JUMP 3550
LOAD res
RET
RET
LOAD func
PUSH_INT 0
INDEX
PUSH_STR "function"
EQ
JUMP_IF_FALSE 3627
LOAD func
PUSH_INT 1
INDEX
STORE params
LOAD func
PUSH_INT 2
INDEX
STORE body
LOAD func
PUSH_INT 3
INDEX
STORE captured
LOAD captured
STORE base
LOAD captured
PUSH_STR "global"
EQ
JUMP_IF_FALSE 3580
LOAD global_env
STORE base
JUMP 3580
LOAD base
CALL copy_env
STORE local
PUSH_INT 0
STORE i
LOAD params
BUILTIN length 1
STORE params_len
LOAD i
LOAD params_len
LT
JUMP_IF_FALSE 3606
LOAD local
LOAD params
LOAD i
INDEX
LOAD arg_values
LOAD i
INDEX
CALL env_set
STORE local
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3588
BUILD_LIST 0
STORE res
LOAD body
LOAD local
PUSH_BOOL 0
CALL execute
STORE res
LOAD res
PUSH_INT 0
INDEX
PUSH_STR "return"
EQ
JUMP_IF_FALSE 3624
LOAD res
PUSH_INT 1
INDEX
RET
JUMP 3624
PUSH_BOOL 0
RET
JUMP 3698
LOAD func
PUSH_INT 0
INDEX
PUSH_STR "builtin"
EQ
JUMP_IF_FALSE 3694
LOAD func
PUSH_INT 1
INDEX
STORE name
LOAD name
PUSH_STR "length"
EQ
JUMP_IF_FALSE 3647
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN length 1
RET
JUMP 3687
LOAD name
PUSH_STR "read_file"
EQ
JUMP_IF_FALSE 3657
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN read_file 1
RET
JUMP 3687
LOAD name
PUSH_STR "ascii"
EQ
JUMP_IF_FALSE 3667
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN ascii 1
RET
JUMP 3687
LOAD name
PUSH_STR "chr"
EQ
JUMP_IF_FALSE 3677
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN chr 1
RET
JUMP 3687
LOAD name
PUSH_STR "freeze"
EQ
JUMP_IF_FALSE 3687
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN freeze 1
RET
JUMP 3687
PUSH_STR "Unknown builtin: "
LOAD name
ADD
EMIT
PUSH_BOOL 0
RET
JUMP 3698
PUSH_STR "Not a function value"
EMIT
PUSH_BOOL 0
RET
RET
LOAD current_dir
LOAD path
CALL join_path
STORE full
PUSH_INT 0
STORE k
LOAD loaded_modules
BUILTIN length 1
STORE lm_len
LOAD k
LOAD lm_len
LT
JUMP_IF_FALSE 3730
LOAD loaded_modules
LOAD k
INDEX
LOAD full
EQ
JUMP_IF_FALSE 3725
PUSH_STR "Recursive import: "
LOAD full
ADD
EMIT
BUILD_DICT 0
RET
JUMP 3725
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 3708
LOAD loaded_modules
LOAD full
BUILD_LIST 1
ADD
STORE loaded_modules
LOAD current_dir
STORE saved_dir
LOAD module_file
STORE saved_file
LOAD global_env
STORE saved_global
LOAD full
CALL dirname
STORE current_dir
LOAD full
STORE module_file
LOAD full
STORE name
LOAD name
BUILTIN length 1
PUSH_INT 1
SUB
STORE i
LOAD i
PUSH_INT 0
GE
LOAD name
LOAD i
INDEX
PUSH_STR "/"
NE
AND
JUMP_IF_FALSE 3768
LOAD i
PUSH_INT 1
SUB
STORE i
JUMP 3753
LOAD i
PUSH_INT 0
GE
JUMP_IF_FALSE 3780
LOAD name
LOAD i
PUSH_INT 1
ADD
PUSH_NONE
SLICE
STORE name
JUMP 3780
LOAD name
BUILTIN read_file 1
STORE source
LOAD source
PUSH_BOOL 0
EQ
JUMP_IF_FALSE 3805
PUSH_STR "Failed to read file: "
LOAD full
ADD
EMIT
LOAD saved_dir
STORE current_dir
LOAD saved_file
STORE module_file
LOAD saved_global
STORE global_env
LOAD loaded_modules
PUSH_INT 0
LOAD lm_len
SLICE
STORE loaded_modules
BUILD_DICT 0
RET
JUMP 3805
LOAD source
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD source
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD source
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD source
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 3871
PUSH_INT 6
STORE j
LOAD j
LOAD src_len
LT
LOAD source
LOAD j
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 3865
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 3865
LOAD source
LOAD j
PUSH_NONE
SLICE
STORE source
JUMP 3871
LOAD source
CALL parse
STORE ast
PUSH_STR "length"
PUSH_STR "builtin"
PUSH_STR "length"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "read_file"
PUSH_STR "builtin"
PUSH_STR "read_file"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "ascii"
PUSH_STR "builtin"
PUSH_STR "ascii"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "chr"
PUSH_STR "builtin"
PUSH_STR "chr"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "freeze"
PUSH_STR "builtin"
PUSH_STR "freeze"
BUILD_LIST 2
BUILD_LIST 2
BUILD_LIST 5
STORE env
LOAD env
PUSH_STR "args"
BUILD_LIST 0
CALL env_set
STORE env
LOAD env
STORE global_env
BUILD_LIST 0
STORE exports
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE stmt
LOAD ast
BUILTIN length 1
STORE ast_len
LOAD i
LOAD ast_len
LT
JUMP_IF_FALSE 3950
LOAD ast
LOAD i
INDEX
STORE stmt
LOAD stmt
PUSH_INT 0
INDEX
PUSH_STR "decl"
EQ
LOAD stmt
PUSH_INT 0
INDEX
PUSH_STR "func_def"
EQ
OR
JUMP_IF_FALSE 3945
LOAD exports
LOAD stmt
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE exports
JUMP 3945
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3917
PUSH_BOOL 0
STORE _
LOAD ast
LOAD env
PUSH_BOOL 1
CALL execute
STORE _
LOAD global_env
STORE module_env
BUILD_DICT 0
STORE module_ns
PUSH_STR ""
STORE name
PUSH_BOOL 0
STORE val
PUSH_INT 0
STORE i
LOAD exports
BUILTIN length 1
STORE exp_len
LOAD i
LOAD exp_len
LT
JUMP_IF_FALSE 4021
LOAD exports
LOAD i
INDEX
STORE name
LOAD module_env
LOAD name
CALL lookup_var
PUSH_INT 1
INDEX
STORE val
LOAD val
PUSH_INT 0
INDEX
PUSH_STR "function"
EQ
LOAD val
PUSH_INT 3
INDEX
PUSH_STR "global"
EQ
AND
JUMP_IF_FALSE 4012
PUSH_STR "function"
LOAD val
PUSH_INT 1
INDEX
LOAD val
PUSH_INT 2
INDEX
LOAD module_env
BUILD_LIST 4
STORE val
LOAD module_env
LOAD name
LOAD val
CALL env_set
STORE module_env
JUMP 4012
LOAD module_ns
LOAD name
LOAD val
STORE_INDEX
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3970
LOAD module_ns
BUILTIN freeze 1
STORE module_ns
LOAD saved_dir
STORE current_dir
LOAD saved_file
STORE module_file
LOAD saved_global
STORE global_env
LOAD loaded_modules
PUSH_INT 0
LOAD lm_len
SLICE
STORE loaded_modules
LOAD module_ns
RET
RET
LOAD expr
PUSH_INT 0
INDEX
STORE kind
LOAD kind
PUSH_STR "number"
EQ
JUMP_IF_FALSE 4051
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4666
LOAD kind
PUSH_STR "string"
EQ
JUMP_IF_FALSE 4060
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4666
LOAD kind
PUSH_STR "bool"
EQ
JUMP_IF_FALSE 4069
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4666
LOAD kind
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 4097
LOAD expr
PUSH_INT 1
INDEX
STORE name
LOAD env
LOAD name
CALL lookup_var
STORE res
LOAD res
PUSH_INT 0
INDEX
JUMP_IF_FALSE 4090
LOAD res
PUSH_INT 1
INDEX
RET
JUMP 4090
PUSH_STR "Undefined variable: "
LOAD name
ADD
EMIT
PUSH_BOOL 0
RET
JUMP 4666
LOAD kind
PUSH_STR "add"
EQ
JUMP_IF_FALSE 4114
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
ADD
RET
JUMP 4666
LOAD kind
PUSH_STR "sub"
EQ
JUMP_IF_FALSE 4131
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SUB
RET
JUMP 4666
LOAD kind
PUSH_STR "mul"
EQ
JUMP_IF_FALSE 4148
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
MUL
RET
JUMP 4666
LOAD kind
PUSH_STR "div"
EQ
JUMP_IF_FALSE 4165
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
DIV
RET
JUMP 4666
LOAD kind
PUSH_STR "mod"
EQ
JUMP_IF_FALSE 4182
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
MOD
RET
JUMP 4666
LOAD kind
PUSH_STR "band"
EQ
JUMP_IF_FALSE 4199
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BAND
RET
JUMP 4666
LOAD kind
PUSH_STR "bor"
EQ
JUMP_IF_FALSE 4216
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BOR
RET
JUMP 4666
LOAD kind
PUSH_STR "bxor"
EQ
JUMP_IF_FALSE 4233
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BXOR
RET
JUMP 4666
LOAD kind
PUSH_STR "shl"
EQ
JUMP_IF_FALSE 4250
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SHL
RET
JUMP 4666
LOAD kind
PUSH_STR "shr"
EQ
JUMP_IF_FALSE 4267
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SHR
RET
JUMP 4666
LOAD kind
PUSH_STR "bitnot"
EQ
JUMP_IF_FALSE 4279
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
NOT
RET
JUMP 4666
LOAD kind
PUSH_STR "eq"
EQ
JUMP_IF_FALSE 4296
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
EQ
RET
JUMP 4666
LOAD kind
PUSH_STR "ne"
EQ
JUMP_IF_FALSE 4313
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
NE
RET
JUMP 4666
LOAD kind
PUSH_STR "lt"
EQ
JUMP_IF_FALSE 4330
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
LT
RET
JUMP 4666
LOAD kind
PUSH_STR "gt"
EQ
JUMP_IF_FALSE 4347
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
GT
RET
JUMP 4666
LOAD kind
PUSH_STR "le"
EQ
JUMP_IF_FALSE 4364
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
LE
RET
JUMP 4666
LOAD kind
PUSH_STR "ge"
EQ
JUMP_IF_FALSE 4381
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
GE
RET
JUMP 4666
LOAD kind
PUSH_STR "and"
EQ
JUMP_IF_FALSE 4402
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE left
LOAD left
JUMP_IF_FALSE 4399
LOAD expr
PUSH_INT 2
INDEX
LOAD env
TCALL eval_expr
JUMP 4399
PUSH_BOOL 0
RET
JUMP 4666
LOAD kind
PUSH_STR "or"
EQ
JUMP_IF_FALSE 4423
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE left
LOAD left
JUMP_IF_FALSE 4417
LOAD left
RET
JUMP 4417
LOAD expr
PUSH_INT 2
INDEX
LOAD env
TCALL eval_expr
JUMP 4666
LOAD kind
PUSH_STR "unary"
EQ
JUMP_IF_FALSE 4449
LOAD expr
PUSH_INT 1
INDEX
STORE op
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE val
LOAD op
PUSH_STR "sub"
EQ
JUMP_IF_FALSE 4446
PUSH_INT 0
LOAD val
SUB
RET
JUMP 4446
LOAD val
RET
JUMP 4666
LOAD kind
PUSH_STR "list"
EQ
JUMP_IF_FALSE 4485
LOAD expr
PUSH_INT 1
INDEX
STORE nodes
BUILD_LIST 0
STORE result
PUSH_INT 0
STORE i
LOAD nodes
BUILTIN length 1
STORE nodes_len
LOAD i
LOAD nodes_len
LT
JUMP_IF_FALSE 4482
LOAD result
LOAD nodes
LOAD i
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE result
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4464
LOAD result
RET
JUMP 4666
LOAD kind
PUSH_STR "dict"
EQ
JUMP_IF_FALSE 4538
LOAD expr
PUSH_INT 1
INDEX
STORE pairs
BUILD_DICT 0
STORE result
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE pair
PUSH_BOOL 0
STORE key
PUSH_BOOL 0
STORE val
LOAD pairs
BUILTIN length 1
STORE pairs_len
LOAD i
LOAD pairs_len
LT
JUMP_IF_FALSE 4535
LOAD pairs
LOAD i
INDEX
STORE pair
LOAD pair
PUSH_INT 0
INDEX
LOAD env
CALL eval_expr
STORE key
LOAD pair
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE val
LOAD result
LOAD key
LOAD val
STORE_INDEX
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4506
LOAD result
RET
JUMP 4666
LOAD kind
PUSH_STR "slice"
EQ
JUMP_IF_FALSE 4576
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE start
LOAD expr
PUSH_INT 3
INDEX
STORE end_node
LOAD end_node
JUMP_IF_FALSE 4570
LOAD end_node
LOAD env
CALL eval_expr
STORE end
LOAD base
LOAD start
LOAD end
SLICE
RET
JUMP 4570
LOAD base
LOAD start
PUSH_NONE
SLICE
RET
JUMP 4666
LOAD kind
PUSH_STR "index"
EQ
JUMP_IF_FALSE 4597
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE idx
LOAD base
LOAD idx
INDEX
RET
JUMP 4666
LOAD kind
PUSH_STR "dot"
EQ
JUMP_IF_FALSE 4616
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
STORE attr
LOAD base
LOAD attr
INDEX
RET
JUMP 4666
LOAD kind
PUSH_STR "func_call"
EQ
JUMP_IF_FALSE 4660
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE func_val
LOAD expr
PUSH_INT 2
INDEX
STORE arg_nodes
BUILD_LIST 0
STORE arg_values
PUSH_INT 0
STORE i
LOAD arg_nodes
BUILTIN length 1
STORE arg_len
LOAD i
LOAD arg_len
LT
JUMP_IF_FALSE 4655
LOAD arg_values
LOAD arg_nodes
LOAD i
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE arg_values
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4637
LOAD func_val
LOAD arg_values
LOAD env
TCALL call_function
JUMP 4666
PUSH_STR "Unknown expr kind: "
LOAD kind
ADD
EMIT
PUSH_BOOL 0
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE stmt
PUSH_BOOL 0
STORE kind
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE res
LOAD stmts
BUILTIN length 1
STORE stmts_len
PUSH_BOOL 0
STORE cond
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE loop_res
PUSH_BOOL 0
STORE val
PUSH_STR ""
STORE name
BUILD_LIST 0
STORE params
BUILD_LIST 0
STORE body
PUSH_BOOL 0
STORE func_val
BUILD_LIST 0
STORE arg_nodes
BUILD_LIST 0
STORE call_args
PUSH_INT 0
STORE j
PUSH_INT 0
STORE arg_len
PUSH_BOOL 0
STORE obj
PUSH_STR ""
STORE attr
PUSH_BOOL 0
STORE idx
PUSH_BOOL 0
STORE _
LOAD i
LOAD stmts_len
LT
JUMP_IF_FALSE 5072
LOAD stmts
LOAD i
INDEX
STORE stmt
LOAD stmt
PUSH_INT 0
INDEX
STORE kind
LOAD kind
PUSH_STR "decl"
EQ
JUMP_IF_FALSE 4745
LOAD env
LOAD stmt
PUSH_INT 1
INDEX
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4744
LOAD env
STORE global_env
JUMP 4744
JUMP 5067
LOAD kind
PUSH_STR "assign"
EQ
JUMP_IF_FALSE 4766
LOAD env
LOAD stmt
PUSH_INT 1
INDEX
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4765
LOAD env
STORE global_env
JUMP 4765
JUMP 5067
LOAD kind
PUSH_STR "attr_assign"
EQ
JUMP_IF_FALSE 4789
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE obj
LOAD stmt
PUSH_INT 2
INDEX
STORE attr
LOAD obj
LOAD attr
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
CALL eval_expr
STORE_INDEX
JUMP 5067
LOAD kind
PUSH_STR "index_assign"
EQ
JUMP_IF_FALSE 4814
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE obj
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE idx
LOAD obj
LOAD idx
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
CALL eval_expr
STORE_INDEX
JUMP 5067
LOAD kind
PUSH_STR "emit"
EQ
JUMP_IF_FALSE 4825
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
EMIT
JUMP 5067
LOAD kind
PUSH_STR "facts"
EQ
JUMP_IF_FALSE 4843
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE cond
LOAD cond
JUMP_IF_FALSE 4840
PUSH_BOOL 0
STORE _
JUMP 4842
PUSH_STR "Assertion failed"
EMIT
JUMP 5067
LOAD kind
PUSH_STR "if"
EQ
JUMP_IF_FALSE 4890
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE cond
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE res
LOAD cond
JUMP_IF_FALSE 4867
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
LOAD is_global
CALL execute
STORE res
JUMP 4880
LOAD stmt
BUILTIN length 1
PUSH_INT 3
GT
JUMP_IF_FALSE 4880
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
LOAD is_global
CALL execute
STORE res
JUMP 4880
LOAD res
PUSH_INT 0
INDEX
PUSH_STR "normal"
NE
JUMP_IF_FALSE 4889
LOAD res
RET
JUMP 4889
JUMP 5067
LOAD kind
PUSH_STR "loop"
EQ
JUMP_IF_FALSE 4930
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE loop_res
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
JUMP_IF_FALSE 4929
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
LOAD is_global
CALL execute
STORE loop_res
LOAD loop_res
PUSH_INT 0
INDEX
PUSH_STR "break"
EQ
JUMP_IF_FALSE 4919
JUMP 4929
JUMP 4928
LOAD loop_res
PUSH_INT 0
INDEX
PUSH_STR "return"
EQ
JUMP_IF_FALSE 4928
LOAD loop_res
RET
JUMP 4928
JUMP 4898
JUMP 5067
LOAD kind
PUSH_STR "break"
EQ
JUMP_IF_FALSE 4939
PUSH_STR "break"
PUSH_BOOL 0
BUILD_LIST 2
RET
JUMP 5067
LOAD kind
PUSH_STR "return"
EQ
JUMP_IF_FALSE 4954
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE val
PUSH_STR "return"
LOAD val
BUILD_LIST 2
RET
JUMP 5067
LOAD kind
PUSH_STR "func_def"
EQ
JUMP_IF_FALSE 4996
LOAD stmt
PUSH_INT 1
INDEX
STORE name
LOAD stmt
PUSH_INT 2
INDEX
STORE params
LOAD stmt
PUSH_INT 3
INDEX
STORE body
LOAD is_global
JUMP_IF_FALSE 4979
PUSH_STR "function"
LOAD params
LOAD body
PUSH_STR "global"
BUILD_LIST 4
STORE func_val
JUMP 4985
PUSH_STR "function"
LOAD params
LOAD body
LOAD env
BUILD_LIST 4
STORE func_val
LOAD env
LOAD name
LOAD func_val
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4995
LOAD env
STORE global_env
JUMP 4995
JUMP 5067
LOAD kind
PUSH_STR "import"
EQ
JUMP_IF_FALSE 5018
LOAD stmt
PUSH_INT 1
INDEX
CALL import_module
STORE obj
LOAD env
LOAD stmt
PUSH_INT 2
INDEX
LOAD obj
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 5017
LOAD env
STORE global_env
JUMP 5017
JUMP 5067
LOAD kind
PUSH_STR "func_call"
EQ
JUMP_IF_FALSE 5063
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE func_val
LOAD stmt
PUSH_INT 2
INDEX
STORE arg_nodes
BUILD_LIST 0
STORE call_args
PUSH_INT 0
STORE j
LOAD arg_nodes
BUILTIN length 1
STORE arg_len
LOAD j
LOAD arg_len
LT
JUMP_IF_FALSE 5057
LOAD call_args
LOAD arg_nodes
LOAD j
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE call_args
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 5039
LOAD func_val
LOAD call_args
LOAD env
CALL call_function
STORE _
JUMP 5067
PUSH_STR "Unknown statement: "
LOAD kind
ADD
EMIT
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4712
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
RET
RET
LOAD source
CALL parse
STORE ast
PUSH_STR "length"
PUSH_STR "builtin"
PUSH_STR "length"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "read_file"
PUSH_STR "builtin"
PUSH_STR "read_file"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "ascii"
PUSH_STR "builtin"
PUSH_STR "ascii"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "chr"
PUSH_STR "builtin"
PUSH_STR "chr"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "freeze"
PUSH_STR "builtin"
PUSH_STR "freeze"
BUILD_LIST 2
BUILD_LIST 2
BUILD_LIST 5
STORE env
LOAD env
PUSH_STR "args"
LOAD args
CALL env_set
STORE env
LOAD env
STORE global_env
LOAD ast
LOAD env
PUSH_BOOL 1
TCALL execute
RET
LOAD args
STORE saved
LOAD current_dir
STORE old_dir
LOAD module_file
STORE old_file
LOAD path
CALL normalize_path
STORE path
LOAD file_args
STORE args
LOAD path
STORE module_file
LOAD path
CALL dirname
STORE current_dir
LOAD path
STORE name
LOAD name
BUILTIN length 1
PUSH_INT 1
SUB
STORE i
LOAD i
PUSH_INT 0
GE
LOAD name
LOAD i
INDEX
PUSH_STR "/"
NE
AND
JUMP_IF_FALSE 5157
LOAD i
PUSH_INT 1
SUB
STORE i
JUMP 5142
LOAD i
PUSH_INT 0
GE
JUMP_IF_FALSE 5169
LOAD name
LOAD i
PUSH_INT 1
ADD
PUSH_NONE
SLICE
STORE name
JUMP 5169
LOAD name
BUILTIN read_file 1
STORE source
LOAD source
PUSH_BOOL 0
EQ
JUMP_IF_FALSE 5191
PUSH_STR "Failed to read file: "
LOAD path
ADD
EMIT
LOAD old_dir
STORE current_dir
LOAD old_file
STORE module_file
LOAD saved
STORE args
PUSH_STR "error"
PUSH_BOOL 0
BUILD_LIST 2
RET
JUMP 5191
LOAD source
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD source
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD source
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD source
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 5275
LOAD source
PUSH_INT 6
PUSH_NONE
SLICE
STORE source
LOAD source
BUILTIN length 1
PUSH_INT 0
GT
JUMP_IF_FALSE 5274
LOAD source
PUSH_INT 0
INDEX
PUSH_STR "\r"
EQ
JUMP_IF_FALSE 5256
LOAD source
PUSH_INT 1
PUSH_NONE
SLICE
STORE source
JUMP 5256
LOAD source
BUILTIN length 1
PUSH_INT 0
GT
LOAD source
PUSH_INT 0
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 5273
LOAD source
PUSH_INT 1
PUSH_NONE
SLICE
STORE source
JUMP 5273
JUMP 5274
JUMP 5275
LOAD source
CALL run
STORE res
LOAD old_dir
STORE current_dir
LOAD old_file
STORE module_file
LOAD saved
STORE args
LOAD res
RET
RET
LOAD path
LOAD args
TCALL run_file_with_args
RET