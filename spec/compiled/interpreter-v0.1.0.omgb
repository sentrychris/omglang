FUNC is_digit 1 ch 20
FUNC is_alpha 1 ch 29
FUNC is_alnum 1 ch 50
FUNC read_number 2 src i 57
FUNC read_binary 2 src i 97
FUNC read_ident 2 src i 144
FUNC tokenize 1 src 174
FUNC parse 1 source 975
FUNC parse_program 2 tokens i 987
FUNC parse_statement 2 tokens i 1020
FUNC parse_block 2 tokens i 1630
FUNC parse_expression 2 tokens i 1681
FUNC parse_or 2 tokens i 1685
FUNC parse_and 2 tokens i 1744
FUNC parse_comparison 2 tokens i 1803
FUNC parse_add_sub 2 tokens i 1980
FUNC parse_term 2 tokens i 2069
FUNC parse_shift 2 tokens i 2180
FUNC parse_bit_and 2 tokens i 2269
FUNC parse_bit_xor 2 tokens i 2328
FUNC parse_bit_or 2 tokens i 2387
FUNC parse_factor 2 tokens i 2446
FUNC lookup_var 2 env name 3110
FUNC env_set 3 env name value 3181
FUNC copy_env 1 env 3226
FUNC dirname 1 path 3256
FUNC join_path 2 base rel 3289
FUNC call_function 3 func arg_values env 3310
FUNC import_module 1 path 3446
FUNC eval_expr 2 expr env 3715
FUNC execute 3 stmts env is_global 4344
FUNC run 1 source 4754
FUNC run_file_with_args 2 path file_args 4791
FUNC run_file 1 path 4897
PUSH_INT 0
STORE tok_len
BUILD_LIST 0
STORE global_env
PUSH_STR "."
STORE current_dir
BUILD_LIST 0
STORE loaded_modules
LOAD args
BUILTIN length 1
PUSH_INT 0
GT
JUMP_IF_FALSE 19
LOAD args
PUSH_INT 0
INDEX
CALL run_file
POP
JUMP 19
HALT
LOAD ch
PUSH_STR "0"
GE
LOAD ch
PUSH_STR "9"
LE
AND
RET
RET
LOAD ch
PUSH_STR "a"
GE
LOAD ch
PUSH_STR "z"
LE
AND
LOAD ch
PUSH_STR "A"
GE
LOAD ch
PUSH_STR "Z"
LE
AND
OR
LOAD ch
PUSH_STR "_"
EQ
OR
RET
RET
LOAD ch
CALL is_alpha
LOAD ch
CALL is_digit
OR
RET
RET
PUSH_INT 0
STORE num
PUSH_STR ""
STORE c
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
CALL is_digit
AND
JUMP_IF_FALSE 92
LOAD src
LOAD i
INDEX
STORE c
LOAD num
PUSH_INT 10
MUL
LOAD c
BUILTIN ascii 1
ADD
PUSH_STR "0"
BUILTIN ascii 1
SUB
STORE num
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 64
LOAD num
LOAD i
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE num
PUSH_STR ""
STORE c
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
PUSH_STR "0"
EQ
LOAD src
LOAD i
INDEX
PUSH_STR "1"
EQ
OR
AND
JUMP_IF_FALSE 139
LOAD src
LOAD i
INDEX
STORE c
LOAD num
PUSH_INT 2
MUL
LOAD c
BUILTIN ascii 1
ADD
PUSH_STR "0"
BUILTIN ascii 1
SUB
STORE num
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 104
LOAD num
LOAD i
BUILD_LIST 2
RET
RET
PUSH_STR ""
STORE s
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
CALL is_alnum
AND
JUMP_IF_FALSE 169
LOAD s
LOAD src
LOAD i
INDEX
ADD
STORE s
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 149
LOAD s
LOAD i
BUILD_LIST 2
RET
RET
BUILD_DICT 0
STORE tokens
PUSH_INT 0
STORE n
PUSH_INT 0
STORE i
PUSH_STR ""
STORE c
BUILD_LIST 0
STORE res
PUSH_STR ""
STORE word
PUSH_STR ""
STORE s
LOAD src
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD src
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD src
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD src
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 264
PUSH_INT 6
STORE i
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\r"
EQ
AND
JUMP_IF_FALSE 248
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 248
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 263
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 263
JUMP 264
LOAD i
LOAD src_len
LT
JUMP_IF_FALSE 970
LOAD src
LOAD i
INDEX
STORE c
LOAD c
PUSH_STR " "
EQ
LOAD c
PUSH_STR "\t"
EQ
OR
LOAD c
PUSH_STR "\r"
EQ
OR
LOAD c
PUSH_STR "\n"
EQ
OR
JUMP_IF_FALSE 293
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "#"
EQ
JUMP_IF_FALSE 313
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\n"
NE
AND
JUMP_IF_FALSE 312
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 297
JUMP 969
LOAD c
PUSH_STR ":"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 346
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ":="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR ":"
EQ
JUMP_IF_FALSE 365
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ":"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "="
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 398
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "=="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "!"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 431
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "!="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "<"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 464
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "<="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR ">"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 497
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ">="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "<"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "<"
EQ
AND
JUMP_IF_FALSE 530
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "<<"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR ">"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR ">"
EQ
AND
JUMP_IF_FALSE 563
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ">>"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "/"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "*"
EQ
AND
JUMP_IF_FALSE 615
LOAD i
PUSH_INT 2
ADD
STORE i
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "*"
NE
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "/"
NE
OR
AND
JUMP_IF_FALSE 610
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 585
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "("
EQ
LOAD c
PUSH_STR ")"
EQ
OR
LOAD c
PUSH_STR "{"
EQ
OR
LOAD c
PUSH_STR "}"
EQ
OR
LOAD c
PUSH_STR ","
EQ
OR
LOAD c
PUSH_STR "+"
EQ
OR
LOAD c
PUSH_STR "-"
EQ
OR
LOAD c
PUSH_STR "*"
EQ
OR
LOAD c
PUSH_STR "/"
EQ
OR
LOAD c
PUSH_STR "%"
EQ
OR
LOAD c
PUSH_STR "<"
EQ
OR
LOAD c
PUSH_STR ">"
EQ
OR
LOAD c
PUSH_STR "["
EQ
OR
LOAD c
PUSH_STR "]"
EQ
OR
LOAD c
PUSH_STR "&"
EQ
OR
LOAD c
PUSH_STR "|"
EQ
OR
LOAD c
PUSH_STR "^"
EQ
OR
LOAD c
PUSH_STR "~"
EQ
OR
LOAD c
PUSH_STR "."
EQ
OR
JUMP_IF_FALSE 706
LOAD tokens
LOAD n
PUSH_STR "symbol"
LOAD c
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 969
LOAD c
PUSH_STR "0"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "b"
EQ
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "B"
EQ
OR
AND
JUMP_IF_FALSE 757
LOAD i
PUSH_INT 2
ADD
STORE i
LOAD src
LOAD i
CALL read_binary
STORE res
LOAD tokens
LOAD n
PUSH_STR "number"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD res
PUSH_INT 1
INDEX
STORE i
JUMP 969
LOAD c
CALL is_digit
JUMP_IF_FALSE 781
LOAD src
LOAD i
CALL read_number
STORE res
LOAD tokens
LOAD n
PUSH_STR "number"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD res
PUSH_INT 1
INDEX
STORE i
JUMP 969
LOAD c
PUSH_STR "\""
EQ
JUMP_IF_FALSE 850
LOAD i
PUSH_INT 1
ADD
STORE i
PUSH_STR ""
STORE s
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\""
NE
AND
JUMP_IF_FALSE 835
LOAD src
LOAD i
INDEX
PUSH_STR "\\"
EQ
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "n"
EQ
AND
JUMP_IF_FALSE 824
LOAD s
PUSH_STR "\n"
ADD
STORE s
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 834
LOAD s
LOAD src
LOAD i
INDEX
ADD
STORE s
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 791
LOAD i
PUSH_INT 1
ADD
STORE i
LOAD tokens
LOAD n
PUSH_STR "string"
LOAD s
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 969
LOAD src
LOAD i
CALL read_ident
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE word
LOAD res
PUSH_INT 1
INDEX
STORE i
LOAD word
PUSH_STR "alloc"
EQ
LOAD word
PUSH_STR "emit"
EQ
OR
LOAD word
PUSH_STR "proc"
EQ
OR
LOAD word
PUSH_STR "return"
EQ
OR
LOAD word
PUSH_STR "if"
EQ
OR
LOAD word
PUSH_STR "else"
EQ
OR
LOAD word
PUSH_STR "elif"
EQ
OR
LOAD word
PUSH_STR "loop"
EQ
OR
LOAD word
PUSH_STR "break"
EQ
OR
LOAD word
PUSH_STR "and"
EQ
OR
LOAD word
PUSH_STR "or"
EQ
OR
LOAD word
PUSH_STR "facts"
EQ
OR
LOAD word
PUSH_STR "import"
EQ
OR
LOAD word
PUSH_STR "as"
EQ
OR
JUMP_IF_FALSE 929
LOAD tokens
LOAD n
PUSH_STR "kw"
LOAD word
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 969
LOAD word
PUSH_STR "true"
EQ
JUMP_IF_FALSE 944
LOAD tokens
LOAD n
PUSH_STR "bool"
PUSH_BOOL 1
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 969
LOAD word
PUSH_STR "false"
EQ
JUMP_IF_FALSE 959
LOAD tokens
LOAD n
PUSH_STR "bool"
PUSH_BOOL 0
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 969
LOAD tokens
LOAD n
PUSH_STR "ident"
LOAD word
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 264
LOAD n
STORE tok_len
LOAD tokens
RET
RET
LOAD source
CALL tokenize
STORE tokens
LOAD tokens
PUSH_INT 0
CALL parse_program
STORE res
LOAD res
PUSH_INT 0
INDEX
RET
RET
BUILD_LIST 0
STORE stmts
PUSH_BOOL 0
LOAD i
BUILD_LIST 2
STORE res
LOAD res
PUSH_INT 1
INDEX
LOAD tok_len
LT
JUMP_IF_FALSE 1013
LOAD tokens
LOAD res
PUSH_INT 1
INDEX
CALL parse_statement
STORE res
LOAD stmts
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE stmts
JUMP 993
LOAD stmts
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
INDEX
STORE t
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "alloc"
EQ
AND
JUMP_IF_FALSE 1062
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
STORE name
LOAD tokens
LOAD i
PUSH_INT 3
ADD
CALL parse_expression
STORE res
PUSH_STR "decl"
LOAD name
PUSH_INT 1
INDEX
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "emit"
EQ
AND
JUMP_IF_FALSE 1091
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "emit"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "return"
EQ
AND
JUMP_IF_FALSE 1120
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "return"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "break"
EQ
AND
JUMP_IF_FALSE 1140
PUSH_STR "break"
BUILD_LIST 1
LOAD i
PUSH_INT 1
ADD
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "loop"
EQ
AND
JUMP_IF_FALSE 1178
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res_cond
LOAD tokens
LOAD res_cond
PUSH_INT 1
INDEX
CALL parse_block
STORE res_block
PUSH_STR "loop"
LOAD res_cond
PUSH_INT 0
INDEX
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res_block
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "if"
EQ
AND
JUMP_IF_FALSE 1347
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res_cond
LOAD tokens
LOAD res_cond
PUSH_INT 1
INDEX
CALL parse_block
STORE res_then
LOAD res_then
PUSH_INT 1
INDEX
STORE j
BUILD_LIST 0
STORE elifs
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res_elif
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res_block
BUILD_LIST 0
STORE else_block
PUSH_INT 0
STORE k
PUSH_BOOL 0
STORE pair
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "elif"
EQ
AND
JUMP_IF_FALSE 1270
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE res_elif
LOAD tokens
LOAD res_elif
PUSH_INT 1
INDEX
CALL parse_block
STORE res_block
LOAD elifs
LOAD res_elif
PUSH_INT 0
INDEX
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE elifs
LOAD res_block
PUSH_INT 1
INDEX
STORE j
JUMP 1222
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "else"
EQ
AND
JUMP_IF_FALSE 1305
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_block
STORE res_block
LOAD res_block
PUSH_INT 0
INDEX
STORE else_block
LOAD res_block
PUSH_INT 1
INDEX
STORE j
JUMP 1305
LOAD elifs
BUILTIN length 1
PUSH_INT 1
SUB
STORE k
LOAD k
PUSH_INT 0
GE
JUMP_IF_FALSE 1334
LOAD elifs
LOAD k
INDEX
STORE pair
PUSH_STR "if"
LOAD pair
PUSH_INT 0
INDEX
LOAD pair
PUSH_INT 1
INDEX
LOAD else_block
BUILD_LIST 4
BUILD_LIST 1
STORE else_block
LOAD k
PUSH_INT 1
SUB
STORE k
JUMP 1310
PUSH_STR "if"
LOAD res_cond
PUSH_INT 0
INDEX
LOAD res_then
PUSH_INT 0
INDEX
LOAD else_block
BUILD_LIST 4
LOAD j
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "proc"
EQ
AND
JUMP_IF_FALSE 1449
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
STORE name
LOAD i
PUSH_INT 3
ADD
STORE j
BUILD_LIST 0
STORE params
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ")"
NE
OR
JUMP_IF_FALSE 1428
PUSH_BOOL 1
JUMP_IF_FALSE 1427
LOAD params
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE params
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 1425
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 1426
JUMP 1427
JUMP 1389
JUMP 1428
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
CALL parse_block
STORE res_block
PUSH_STR "func_def"
LOAD name
LOAD params
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD res_block
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "import"
EQ
AND
JUMP_IF_FALSE 1487
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
STORE path
LOAD tokens
LOAD i
PUSH_INT 3
ADD
INDEX
PUSH_INT 1
INDEX
STORE alias
PUSH_STR "import"
LOAD path
LOAD alias
BUILD_LIST 3
LOAD i
PUSH_INT 4
ADD
BUILD_LIST 2
RET
JUMP 1629
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "facts"
EQ
AND
JUMP_IF_FALSE 1516
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "facts"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1629
LOAD tokens
LOAD i
CALL parse_factor
STORE lval_res
LOAD lval_res
PUSH_INT 1
INDEX
STORE j
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ":="
EQ
AND
JUMP_IF_FALSE 1621
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE val_res
LOAD lval_res
PUSH_INT 0
INDEX
STORE target
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 1574
PUSH_STR "assign"
LOAD target
PUSH_INT 1
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1620
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "dot"
EQ
JUMP_IF_FALSE 1597
PUSH_STR "attr_assign"
LOAD target
PUSH_INT 1
INDEX
LOAD target
PUSH_INT 2
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1620
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "index"
EQ
JUMP_IF_FALSE 1620
PUSH_STR "index_assign"
LOAD target
PUSH_INT 1
INDEX
LOAD target
PUSH_INT 2
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1620
JUMP 1621
LOAD lval_res
PUSH_INT 0
INDEX
LOAD lval_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
RET
BUILD_LIST 0
STORE stmts
LOAD i
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "}"
NE
OR
JUMP_IF_FALSE 1674
LOAD tokens
LOAD j
CALL parse_statement
STORE res
LOAD stmts
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE stmts
LOAD res
PUSH_INT 1
INDEX
STORE j
JUMP 1642
LOAD stmts
LOAD j
PUSH_INT 1
ADD
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
TCALL parse_or
RET
LOAD tokens
LOAD i
CALL parse_and
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "or"
EQ
AND
JUMP_IF_FALSE 1739
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_and
STORE right_res
PUSH_STR "or"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1701
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_comparison
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "and"
EQ
AND
JUMP_IF_FALSE 1798
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_comparison
STORE right_res
PUSH_STR "and"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1760
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_or
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "=="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">"
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "!="
EQ
OR
AND
JUMP_IF_FALSE 1975
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_or
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<"
EQ
JUMP_IF_FALSE 1907
PUSH_STR "lt"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1970
LOAD op
PUSH_INT 1
INDEX
PUSH_STR ">"
EQ
JUMP_IF_FALSE 1921
PUSH_STR "gt"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1970
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<="
EQ
JUMP_IF_FALSE 1935
PUSH_STR "le"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1970
LOAD op
PUSH_INT 1
INDEX
PUSH_STR ">="
EQ
JUMP_IF_FALSE 1949
PUSH_STR "ge"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1970
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "=="
EQ
JUMP_IF_FALSE 1963
PUSH_STR "eq"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1970
PUSH_STR "ne"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1823
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_term
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "+"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "-"
EQ
OR
AND
JUMP_IF_FALSE 2064
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_term
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "+"
EQ
JUMP_IF_FALSE 2052
PUSH_STR "add"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2059
PUSH_STR "sub"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2000
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_factor
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "*"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "/"
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "%"
EQ
OR
AND
JUMP_IF_FALSE 2175
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_factor
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "*"
EQ
JUMP_IF_FALSE 2149
PUSH_STR "mul"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2170
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "/"
EQ
JUMP_IF_FALSE 2163
PUSH_STR "div"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2170
PUSH_STR "mod"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2089
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_add_sub
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<<"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">>"
EQ
OR
AND
JUMP_IF_FALSE 2264
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_add_sub
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<<"
EQ
JUMP_IF_FALSE 2252
PUSH_STR "shl"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2259
PUSH_STR "shr"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2200
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_shift
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "&"
EQ
AND
JUMP_IF_FALSE 2323
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_shift
STORE right_res
PUSH_STR "band"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2285
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_and
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "^"
EQ
AND
JUMP_IF_FALSE 2382
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_and
STORE right_res
PUSH_STR "bxor"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2344
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_xor
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "|"
EQ
AND
JUMP_IF_FALSE 2441
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_xor
STORE right_res
PUSH_STR "bor"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2403
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
INDEX
STORE t
PUSH_BOOL 0
STORE node
LOAD i
STORE j
PUSH_INT 0
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "-"
EQ
AND
JUMP_IF_FALSE 2490
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_factor
STORE res
PUSH_STR "unary"
PUSH_STR "sub"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "~"
EQ
AND
JUMP_IF_FALSE 2519
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_factor
STORE res
PUSH_STR "bitnot"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "number"
EQ
JUMP_IF_FALSE 2536
PUSH_STR "number"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "bool"
EQ
JUMP_IF_FALSE 2553
PUSH_STR "bool"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "string"
EQ
JUMP_IF_FALSE 2570
PUSH_STR "string"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 2587
PUSH_STR "ident"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "["
EQ
AND
JUMP_IF_FALSE 2675
BUILD_LIST 0
STORE elems
LOAD i
PUSH_INT 1
ADD
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR "]"
NE
OR
JUMP_IF_FALSE 2666
PUSH_BOOL 1
JUMP_IF_FALSE 2665
LOAD tokens
LOAD k
CALL parse_expression
STORE res
LOAD elems
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE elems
LOAD res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2663
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2664
JUMP 2665
JUMP 2625
JUMP 2666
PUSH_STR "list"
LOAD elems
BUILD_LIST 2
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "{"
EQ
AND
JUMP_IF_FALSE 2827
BUILD_LIST 0
STORE pairs
LOAD i
PUSH_INT 1
ADD
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE val_res
PUSH_STR "string"
PUSH_STR ""
BUILD_LIST 2
STORE key_node
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR "}"
NE
OR
JUMP_IF_FALSE 2818
PUSH_BOOL 1
JUMP_IF_FALSE 2817
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "string"
EQ
JUMP_IF_FALSE 2740
PUSH_STR "string"
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE key_node
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2773
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 2761
PUSH_STR "string"
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE key_node
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2773
LOAD tokens
LOAD k
CALL parse_expression
STORE val_res
LOAD val_res
PUSH_INT 0
INDEX
STORE key_node
LOAD val_res
PUSH_INT 1
INDEX
STORE k
LOAD k
PUSH_INT 1
ADD
STORE k
LOAD tokens
LOAD k
CALL parse_expression
STORE val_res
LOAD pairs
LOAD key_node
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE pairs
LOAD val_res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2815
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2816
JUMP 2817
JUMP 2717
JUMP 2818
PUSH_STR "dict"
LOAD pairs
BUILD_LIST 2
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 2864
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "("
EQ
AND
JUMP_IF_FALSE 2856
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE node
LOAD res
PUSH_INT 1
INDEX
PUSH_INT 1
ADD
STORE j
JUMP 2864
PUSH_STR "number"
PUSH_INT 0
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE inner
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE end_res
BUILD_LIST 0
STORE call_args
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE attr
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
JUMP_IF_FALSE 3105
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "("
EQ
JUMP_IF_FALSE 2975
LOAD j
PUSH_INT 1
ADD
STORE k
BUILD_LIST 0
STORE call_args
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ")"
NE
OR
JUMP_IF_FALSE 2965
PUSH_BOOL 1
JUMP_IF_FALSE 2964
LOAD tokens
LOAD k
CALL parse_expression
STORE res
LOAD call_args
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE call_args
LOAD res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2962
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2963
JUMP 2964
JUMP 2924
JUMP 2965
PUSH_STR "func_call"
LOAD node
LOAD call_args
BUILD_LIST 3
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 3104
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "["
EQ
JUMP_IF_FALSE 3077
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE inner
LOAD inner
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ":"
EQ
AND
JUMP_IF_FALSE 3065
LOAD tokens
LOAD k
PUSH_INT 1
ADD
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
PUSH_STR "]"
EQ
AND
JUMP_IF_FALSE 3042
PUSH_STR "slice"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
PUSH_BOOL 0
BUILD_LIST 4
STORE node
LOAD k
PUSH_INT 2
ADD
STORE j
JUMP 3064
LOAD tokens
LOAD k
PUSH_INT 1
ADD
CALL parse_expression
STORE end_res
PUSH_STR "slice"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
LOAD end_res
PUSH_INT 0
INDEX
BUILD_LIST 4
STORE node
LOAD end_res
PUSH_INT 1
INDEX
PUSH_INT 1
ADD
STORE j
JUMP 3076
PUSH_STR "index"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 3104
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "."
EQ
JUMP_IF_FALSE 3103
LOAD tokens
LOAD j
PUSH_INT 1
ADD
INDEX
STORE attr
PUSH_STR "dot"
LOAD node
LOAD attr
PUSH_INT 1
INDEX
BUILD_LIST 3
STORE node
LOAD j
PUSH_INT 2
ADD
STORE j
JUMP 3104
JUMP 3105
JUMP 2882
LOAD node
LOAD j
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3143
LOAD env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3138
PUSH_BOOL 1
LOAD entry
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 3138
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3117
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD global_env
BUILTIN length 1
STORE global_len
LOAD i
LOAD global_len
LT
JUMP_IF_FALSE 3176
LOAD global_env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3171
PUSH_BOOL 1
LOAD entry
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 3171
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3150
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3216
LOAD env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3211
LOAD env
LOAD i
LOAD name
LOAD value
BUILD_LIST 2
STORE_INDEX
LOAD env
RET
JUMP 3211
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3188
LOAD env
LOAD name
LOAD value
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE env
LOAD env
RET
RET
BUILD_LIST 0
STORE result
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3253
LOAD env
LOAD i
INDEX
STORE entry
LOAD result
LOAD entry
BUILD_LIST 1
ADD
STORE result
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3235
LOAD result
RET
RET
LOAD path
BUILTIN length 1
PUSH_INT 1
SUB
STORE i
LOAD i
PUSH_INT 0
GE
LOAD path
LOAD i
INDEX
PUSH_STR "/"
NE
AND
JUMP_IF_FALSE 3276
LOAD i
PUSH_INT 1
SUB
STORE i
JUMP 3261
LOAD i
PUSH_INT 0
GE
JUMP_IF_FALSE 3286
LOAD path
PUSH_INT 0
LOAD i
SLICE
RET
JUMP 3286
PUSH_STR "."
RET
RET
LOAD rel
BUILTIN length 1
PUSH_INT 0
GT
LOAD rel
PUSH_INT 0
INDEX
PUSH_STR "/"
EQ
AND
JUMP_IF_FALSE 3303
LOAD rel
RET
JUMP 3303
LOAD base
PUSH_STR "/"
ADD
LOAD rel
ADD
RET
RET
LOAD func
PUSH_INT 0
INDEX
PUSH_STR "function"
EQ
JUMP_IF_FALSE 3384
LOAD func
PUSH_INT 1
INDEX
STORE params
LOAD func
PUSH_INT 2
INDEX
STORE body
LOAD func
PUSH_INT 3
INDEX
STORE captured
LOAD captured
STORE base
LOAD captured
PUSH_STR "global"
EQ
JUMP_IF_FALSE 3337
LOAD global_env
STORE base
JUMP 3337
LOAD base
CALL copy_env
STORE local
PUSH_INT 0
STORE i
LOAD params
BUILTIN length 1
STORE params_len
LOAD i
LOAD params_len
LT
JUMP_IF_FALSE 3363
LOAD local
LOAD params
LOAD i
INDEX
LOAD arg_values
LOAD i
INDEX
CALL env_set
STORE local
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3345
BUILD_LIST 0
STORE res
LOAD body
LOAD local
PUSH_BOOL 0
CALL execute
STORE res
LOAD res
PUSH_INT 0
INDEX
PUSH_STR "return"
EQ
JUMP_IF_FALSE 3381
LOAD res
PUSH_INT 1
INDEX
RET
JUMP 3381
PUSH_BOOL 0
RET
JUMP 3445
LOAD func
PUSH_INT 0
INDEX
PUSH_STR "builtin"
EQ
JUMP_IF_FALSE 3441
LOAD func
PUSH_INT 1
INDEX
STORE name
LOAD name
PUSH_STR "length"
EQ
JUMP_IF_FALSE 3404
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN length 1
RET
JUMP 3434
LOAD name
PUSH_STR "read_file"
EQ
JUMP_IF_FALSE 3414
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN read_file 1
RET
JUMP 3434
LOAD name
PUSH_STR "ascii"
EQ
JUMP_IF_FALSE 3424
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN ascii 1
RET
JUMP 3434
LOAD name
PUSH_STR "chr"
EQ
JUMP_IF_FALSE 3434
LOAD arg_values
PUSH_INT 0
INDEX
BUILTIN chr 1
RET
JUMP 3434
PUSH_STR "Unknown builtin: "
LOAD name
ADD
EMIT
PUSH_BOOL 0
RET
JUMP 3445
PUSH_STR "Not a function value"
EMIT
PUSH_BOOL 0
RET
RET
LOAD current_dir
LOAD path
CALL join_path
STORE full
PUSH_INT 0
STORE k
LOAD loaded_modules
BUILTIN length 1
STORE lm_len
LOAD k
LOAD lm_len
LT
JUMP_IF_FALSE 3477
LOAD loaded_modules
LOAD k
INDEX
LOAD full
EQ
JUMP_IF_FALSE 3472
PUSH_STR "Recursive import: "
LOAD full
ADD
EMIT
BUILD_DICT 0
RET
JUMP 3472
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 3455
LOAD loaded_modules
LOAD full
BUILD_LIST 1
ADD
STORE loaded_modules
LOAD full
BUILTIN read_file 1
STORE source
LOAD source
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD source
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD source
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD source
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 3551
PUSH_INT 6
STORE j
LOAD j
LOAD src_len
LT
LOAD source
LOAD j
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 3545
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 3545
LOAD source
LOAD j
PUSH_NONE
SLICE
STORE source
JUMP 3551
LOAD current_dir
STORE saved_dir
LOAD full
CALL dirname
STORE current_dir
LOAD global_env
STORE saved_global
LOAD source
CALL parse
STORE ast
PUSH_STR "length"
PUSH_STR "builtin"
PUSH_STR "length"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "read_file"
PUSH_STR "builtin"
PUSH_STR "read_file"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "ascii"
PUSH_STR "builtin"
PUSH_STR "ascii"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "chr"
PUSH_STR "builtin"
PUSH_STR "chr"
BUILD_LIST 2
BUILD_LIST 2
BUILD_LIST 4
STORE env
LOAD env
PUSH_STR "args"
BUILD_LIST 0
CALL env_set
STORE env
LOAD env
STORE global_env
BUILD_LIST 0
STORE exports
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE stmt
LOAD ast
BUILTIN length 1
STORE ast_len
LOAD i
LOAD ast_len
LT
JUMP_IF_FALSE 3632
LOAD ast
LOAD i
INDEX
STORE stmt
LOAD stmt
PUSH_INT 0
INDEX
PUSH_STR "decl"
EQ
LOAD stmt
PUSH_INT 0
INDEX
PUSH_STR "func_def"
EQ
OR
JUMP_IF_FALSE 3627
LOAD exports
LOAD stmt
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE exports
JUMP 3627
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3599
PUSH_BOOL 0
STORE _
LOAD ast
LOAD env
PUSH_BOOL 1
CALL execute
STORE _
LOAD global_env
STORE module_env
BUILD_DICT 0
STORE module_ns
PUSH_STR ""
STORE name
PUSH_BOOL 0
STORE val
PUSH_INT 0
STORE i
LOAD exports
BUILTIN length 1
STORE exp_len
LOAD i
LOAD exp_len
LT
JUMP_IF_FALSE 3703
LOAD exports
LOAD i
INDEX
STORE name
LOAD module_env
LOAD name
CALL lookup_var
PUSH_INT 1
INDEX
STORE val
LOAD val
PUSH_INT 0
INDEX
PUSH_STR "function"
EQ
LOAD val
PUSH_INT 3
INDEX
PUSH_STR "global"
EQ
AND
JUMP_IF_FALSE 3694
PUSH_STR "function"
LOAD val
PUSH_INT 1
INDEX
LOAD val
PUSH_INT 2
INDEX
LOAD module_env
BUILD_LIST 4
STORE val
LOAD module_env
LOAD name
LOAD val
CALL env_set
STORE module_env
JUMP 3694
LOAD module_ns
LOAD name
LOAD val
STORE_INDEX
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3652
LOAD saved_dir
STORE current_dir
LOAD saved_global
STORE global_env
LOAD loaded_modules
PUSH_INT 0
LOAD lm_len
SLICE
STORE loaded_modules
LOAD module_ns
RET
RET
LOAD expr
PUSH_INT 0
INDEX
STORE kind
LOAD kind
PUSH_STR "number"
EQ
JUMP_IF_FALSE 3728
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4343
LOAD kind
PUSH_STR "string"
EQ
JUMP_IF_FALSE 3737
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4343
LOAD kind
PUSH_STR "bool"
EQ
JUMP_IF_FALSE 3746
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4343
LOAD kind
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 3774
LOAD expr
PUSH_INT 1
INDEX
STORE name
LOAD env
LOAD name
CALL lookup_var
STORE res
LOAD res
PUSH_INT 0
INDEX
JUMP_IF_FALSE 3767
LOAD res
PUSH_INT 1
INDEX
RET
JUMP 3767
PUSH_STR "Undefined variable: "
LOAD name
ADD
EMIT
PUSH_BOOL 0
RET
JUMP 4343
LOAD kind
PUSH_STR "add"
EQ
JUMP_IF_FALSE 3791
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
ADD
RET
JUMP 4343
LOAD kind
PUSH_STR "sub"
EQ
JUMP_IF_FALSE 3808
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SUB
RET
JUMP 4343
LOAD kind
PUSH_STR "mul"
EQ
JUMP_IF_FALSE 3825
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
MUL
RET
JUMP 4343
LOAD kind
PUSH_STR "div"
EQ
JUMP_IF_FALSE 3842
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
DIV
RET
JUMP 4343
LOAD kind
PUSH_STR "mod"
EQ
JUMP_IF_FALSE 3859
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
MOD
RET
JUMP 4343
LOAD kind
PUSH_STR "band"
EQ
JUMP_IF_FALSE 3876
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BAND
RET
JUMP 4343
LOAD kind
PUSH_STR "bor"
EQ
JUMP_IF_FALSE 3893
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BOR
RET
JUMP 4343
LOAD kind
PUSH_STR "bxor"
EQ
JUMP_IF_FALSE 3910
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BXOR
RET
JUMP 4343
LOAD kind
PUSH_STR "shl"
EQ
JUMP_IF_FALSE 3927
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SHL
RET
JUMP 4343
LOAD kind
PUSH_STR "shr"
EQ
JUMP_IF_FALSE 3944
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SHR
RET
JUMP 4343
LOAD kind
PUSH_STR "bitnot"
EQ
JUMP_IF_FALSE 3956
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
NOT
RET
JUMP 4343
LOAD kind
PUSH_STR "eq"
EQ
JUMP_IF_FALSE 3973
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
EQ
RET
JUMP 4343
LOAD kind
PUSH_STR "ne"
EQ
JUMP_IF_FALSE 3990
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
NE
RET
JUMP 4343
LOAD kind
PUSH_STR "lt"
EQ
JUMP_IF_FALSE 4007
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
LT
RET
JUMP 4343
LOAD kind
PUSH_STR "gt"
EQ
JUMP_IF_FALSE 4024
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
GT
RET
JUMP 4343
LOAD kind
PUSH_STR "le"
EQ
JUMP_IF_FALSE 4041
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
LE
RET
JUMP 4343
LOAD kind
PUSH_STR "ge"
EQ
JUMP_IF_FALSE 4058
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
GE
RET
JUMP 4343
LOAD kind
PUSH_STR "and"
EQ
JUMP_IF_FALSE 4079
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE left
LOAD left
JUMP_IF_FALSE 4076
LOAD expr
PUSH_INT 2
INDEX
LOAD env
TCALL eval_expr
JUMP 4076
PUSH_BOOL 0
RET
JUMP 4343
LOAD kind
PUSH_STR "or"
EQ
JUMP_IF_FALSE 4100
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE left
LOAD left
JUMP_IF_FALSE 4094
LOAD left
RET
JUMP 4094
LOAD expr
PUSH_INT 2
INDEX
LOAD env
TCALL eval_expr
JUMP 4343
LOAD kind
PUSH_STR "unary"
EQ
JUMP_IF_FALSE 4126
LOAD expr
PUSH_INT 1
INDEX
STORE op
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE val
LOAD op
PUSH_STR "sub"
EQ
JUMP_IF_FALSE 4123
PUSH_INT 0
LOAD val
SUB
RET
JUMP 4123
LOAD val
RET
JUMP 4343
LOAD kind
PUSH_STR "list"
EQ
JUMP_IF_FALSE 4162
LOAD expr
PUSH_INT 1
INDEX
STORE nodes
BUILD_LIST 0
STORE result
PUSH_INT 0
STORE i
LOAD nodes
BUILTIN length 1
STORE nodes_len
LOAD i
LOAD nodes_len
LT
JUMP_IF_FALSE 4159
LOAD result
LOAD nodes
LOAD i
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE result
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4141
LOAD result
RET
JUMP 4343
LOAD kind
PUSH_STR "dict"
EQ
JUMP_IF_FALSE 4215
LOAD expr
PUSH_INT 1
INDEX
STORE pairs
BUILD_DICT 0
STORE result
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE pair
PUSH_BOOL 0
STORE key
PUSH_BOOL 0
STORE val
LOAD pairs
BUILTIN length 1
STORE pairs_len
LOAD i
LOAD pairs_len
LT
JUMP_IF_FALSE 4212
LOAD pairs
LOAD i
INDEX
STORE pair
LOAD pair
PUSH_INT 0
INDEX
LOAD env
CALL eval_expr
STORE key
LOAD pair
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE val
LOAD result
LOAD key
LOAD val
STORE_INDEX
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4183
LOAD result
RET
JUMP 4343
LOAD kind
PUSH_STR "slice"
EQ
JUMP_IF_FALSE 4253
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE start
LOAD expr
PUSH_INT 3
INDEX
STORE end_node
LOAD end_node
JUMP_IF_FALSE 4247
LOAD end_node
LOAD env
CALL eval_expr
STORE end
LOAD base
LOAD start
LOAD end
SLICE
RET
JUMP 4247
LOAD base
LOAD start
PUSH_NONE
SLICE
RET
JUMP 4343
LOAD kind
PUSH_STR "index"
EQ
JUMP_IF_FALSE 4274
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE idx
LOAD base
LOAD idx
INDEX
RET
JUMP 4343
LOAD kind
PUSH_STR "dot"
EQ
JUMP_IF_FALSE 4293
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
STORE attr
LOAD base
LOAD attr
INDEX
RET
JUMP 4343
LOAD kind
PUSH_STR "func_call"
EQ
JUMP_IF_FALSE 4337
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE func_val
LOAD expr
PUSH_INT 2
INDEX
STORE arg_nodes
BUILD_LIST 0
STORE arg_values
PUSH_INT 0
STORE i
LOAD arg_nodes
BUILTIN length 1
STORE arg_len
LOAD i
LOAD arg_len
LT
JUMP_IF_FALSE 4332
LOAD arg_values
LOAD arg_nodes
LOAD i
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE arg_values
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4314
LOAD func_val
LOAD arg_values
LOAD env
TCALL call_function
JUMP 4343
PUSH_STR "Unknown expr kind: "
LOAD kind
ADD
EMIT
PUSH_BOOL 0
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE stmt
PUSH_BOOL 0
STORE kind
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE res
LOAD stmts
BUILTIN length 1
STORE stmts_len
PUSH_BOOL 0
STORE cond
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE loop_res
PUSH_BOOL 0
STORE val
PUSH_STR ""
STORE name
BUILD_LIST 0
STORE params
BUILD_LIST 0
STORE body
PUSH_BOOL 0
STORE func_val
BUILD_LIST 0
STORE arg_nodes
BUILD_LIST 0
STORE call_args
PUSH_INT 0
STORE j
PUSH_INT 0
STORE arg_len
PUSH_BOOL 0
STORE obj
PUSH_STR ""
STORE attr
PUSH_BOOL 0
STORE idx
PUSH_BOOL 0
STORE _
LOAD i
LOAD stmts_len
LT
JUMP_IF_FALSE 4749
LOAD stmts
LOAD i
INDEX
STORE stmt
LOAD stmt
PUSH_INT 0
INDEX
STORE kind
LOAD kind
PUSH_STR "decl"
EQ
JUMP_IF_FALSE 4422
LOAD env
LOAD stmt
PUSH_INT 1
INDEX
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4421
LOAD env
STORE global_env
JUMP 4421
JUMP 4744
LOAD kind
PUSH_STR "assign"
EQ
JUMP_IF_FALSE 4443
LOAD env
LOAD stmt
PUSH_INT 1
INDEX
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4442
LOAD env
STORE global_env
JUMP 4442
JUMP 4744
LOAD kind
PUSH_STR "attr_assign"
EQ
JUMP_IF_FALSE 4466
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE obj
LOAD stmt
PUSH_INT 2
INDEX
STORE attr
LOAD obj
LOAD attr
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
CALL eval_expr
STORE_INDEX
JUMP 4744
LOAD kind
PUSH_STR "index_assign"
EQ
JUMP_IF_FALSE 4491
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE obj
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE idx
LOAD obj
LOAD idx
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
CALL eval_expr
STORE_INDEX
JUMP 4744
LOAD kind
PUSH_STR "emit"
EQ
JUMP_IF_FALSE 4502
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
EMIT
JUMP 4744
LOAD kind
PUSH_STR "facts"
EQ
JUMP_IF_FALSE 4520
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE cond
LOAD cond
JUMP_IF_FALSE 4517
PUSH_BOOL 0
STORE _
JUMP 4519
PUSH_STR "Assertion failed"
EMIT
JUMP 4744
LOAD kind
PUSH_STR "if"
EQ
JUMP_IF_FALSE 4567
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE cond
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE res
LOAD cond
JUMP_IF_FALSE 4544
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
LOAD is_global
CALL execute
STORE res
JUMP 4557
LOAD stmt
BUILTIN length 1
PUSH_INT 3
GT
JUMP_IF_FALSE 4557
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
LOAD is_global
CALL execute
STORE res
JUMP 4557
LOAD res
PUSH_INT 0
INDEX
PUSH_STR "normal"
NE
JUMP_IF_FALSE 4566
LOAD res
RET
JUMP 4566
JUMP 4744
LOAD kind
PUSH_STR "loop"
EQ
JUMP_IF_FALSE 4607
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE loop_res
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
JUMP_IF_FALSE 4606
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
LOAD is_global
CALL execute
STORE loop_res
LOAD loop_res
PUSH_INT 0
INDEX
PUSH_STR "break"
EQ
JUMP_IF_FALSE 4596
JUMP 4606
JUMP 4605
LOAD loop_res
PUSH_INT 0
INDEX
PUSH_STR "return"
EQ
JUMP_IF_FALSE 4605
LOAD loop_res
RET
JUMP 4605
JUMP 4575
JUMP 4744
LOAD kind
PUSH_STR "break"
EQ
JUMP_IF_FALSE 4616
PUSH_STR "break"
PUSH_BOOL 0
BUILD_LIST 2
RET
JUMP 4744
LOAD kind
PUSH_STR "return"
EQ
JUMP_IF_FALSE 4631
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE val
PUSH_STR "return"
LOAD val
BUILD_LIST 2
RET
JUMP 4744
LOAD kind
PUSH_STR "func_def"
EQ
JUMP_IF_FALSE 4673
LOAD stmt
PUSH_INT 1
INDEX
STORE name
LOAD stmt
PUSH_INT 2
INDEX
STORE params
LOAD stmt
PUSH_INT 3
INDEX
STORE body
LOAD is_global
JUMP_IF_FALSE 4656
PUSH_STR "function"
LOAD params
LOAD body
PUSH_STR "global"
BUILD_LIST 4
STORE func_val
JUMP 4662
PUSH_STR "function"
LOAD params
LOAD body
LOAD env
BUILD_LIST 4
STORE func_val
LOAD env
LOAD name
LOAD func_val
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4672
LOAD env
STORE global_env
JUMP 4672
JUMP 4744
LOAD kind
PUSH_STR "import"
EQ
JUMP_IF_FALSE 4695
LOAD stmt
PUSH_INT 1
INDEX
CALL import_module
STORE obj
LOAD env
LOAD stmt
PUSH_INT 2
INDEX
LOAD obj
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4694
LOAD env
STORE global_env
JUMP 4694
JUMP 4744
LOAD kind
PUSH_STR "func_call"
EQ
JUMP_IF_FALSE 4740
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE func_val
LOAD stmt
PUSH_INT 2
INDEX
STORE arg_nodes
BUILD_LIST 0
STORE call_args
PUSH_INT 0
STORE j
LOAD arg_nodes
BUILTIN length 1
STORE arg_len
LOAD j
LOAD arg_len
LT
JUMP_IF_FALSE 4734
LOAD call_args
LOAD arg_nodes
LOAD j
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE call_args
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 4716
LOAD func_val
LOAD call_args
LOAD env
CALL call_function
STORE _
JUMP 4744
PUSH_STR "Unknown statement: "
LOAD kind
ADD
EMIT
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4389
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
RET
RET
LOAD source
CALL parse
STORE ast
PUSH_STR "length"
PUSH_STR "builtin"
PUSH_STR "length"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "read_file"
PUSH_STR "builtin"
PUSH_STR "read_file"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "ascii"
PUSH_STR "builtin"
PUSH_STR "ascii"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "chr"
PUSH_STR "builtin"
PUSH_STR "chr"
BUILD_LIST 2
BUILD_LIST 2
BUILD_LIST 4
STORE env
LOAD env
PUSH_STR "args"
LOAD args
CALL env_set
STORE env
LOAD env
STORE global_env
LOAD ast
LOAD env
PUSH_BOOL 1
TCALL execute
RET
LOAD args
STORE saved
LOAD current_dir
STORE old_dir
LOAD file_args
STORE args
LOAD path
CALL dirname
STORE current_dir
LOAD path
BUILTIN read_file 1
STORE source
LOAD source
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD source
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD source
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD source
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 4887
LOAD source
PUSH_INT 6
PUSH_NONE
SLICE
STORE source
LOAD source
BUILTIN length 1
PUSH_INT 0
GT
JUMP_IF_FALSE 4886
LOAD source
PUSH_INT 0
INDEX
PUSH_STR "\r"
EQ
JUMP_IF_FALSE 4868
LOAD source
PUSH_INT 1
PUSH_NONE
SLICE
STORE source
JUMP 4868
LOAD source
BUILTIN length 1
PUSH_INT 0
GT
LOAD source
PUSH_INT 0
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 4885
LOAD source
PUSH_INT 1
PUSH_NONE
SLICE
STORE source
JUMP 4885
JUMP 4886
JUMP 4887
LOAD source
CALL run
STORE res
LOAD old_dir
STORE current_dir
LOAD saved
STORE args
LOAD res
RET
RET
LOAD path
LOAD args
TCALL run_file_with_args
RET
