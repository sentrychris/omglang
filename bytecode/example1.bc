FUNC greeting 1 name 120
FUNC add 2 a b 125
PUSH_STR World
CALL greeting
EMIT
PUSH_INT 5
STORE x
PUSH_INT 10
STORE y
PUSH_INT 0
STORE z
PUSH_STR x = 
LOAD x
ADD
EMIT
PUSH_STR y = 
LOAD y
ADD
EMIT
PUSH_STR x + y is 
LOAD x
LOAD y
ADD
ADD
EMIT
PUSH_STR -5 + 5 is 
PUSH_INT 5
NEG
PUSH_INT 5
ADD
ADD
EMIT
PUSH_STR Re-assigning x
EMIT
PUSH_STR x was 
LOAD x
ADD
EMIT
PUSH_INT 10
STORE x
PUSH_STR x is now 
LOAD x
ADD
EMIT
PUSH_INT 1
PUSH_INT 2
PUSH_INT 3
BUILD_LIST 3
STORE xs
PUSH_STR sliced xs (Start: inc. End: exc.): 
LOAD xs
PUSH_INT 1
PUSH_INT 2
SLICE
ADD
STORE sxs
PUSH_STR Beginning loop:
EMIT
PUSH_INT 0
STORE i
LOAD i
PUSH_INT 3
LE
JUMP_IF_FALSE 91
LOAD i
PUSH_INT 1
GT
LOAD i
PUSH_INT 3
LT
AND
LOAD i
PUSH_INT 2
EQ
AND
JUMP_IF_FALSE 77
PUSH_STR 2 is alright I guess.
EMIT
JUMP 86
LOAD i
PUSH_INT 3
EQ
JUMP_IF_FALSE 84
PUSH_STR 3 is the magic number.
EMIT
JUMP 86
LOAD i
EMIT
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 58
PUSH_STR Finished loop.
EMIT
PUSH_INT 0
STORE j
PUSH_STR Beginning another loop and checking if j is 2 or 4:
EMIT
LOAD j
PUSH_INT 5
LT
JUMP_IF_FALSE 119
LOAD j
PUSH_INT 2
EQ
LOAD j
PUSH_INT 4
EQ
OR
JUMP_IF_FALSE 114
PUSH_STR j is 
LOAD j
ADD
EMIT
JUMP 114
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 97
HALT
PUSH_STR Hello 
LOAD name
ADD
RET
RET
LOAD a
LOAD b
ADD
RET
RET
