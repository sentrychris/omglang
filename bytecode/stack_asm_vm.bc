FUNC store_var 3 mem name val 223
FUNC load_var 2 mem name 282
FUNC find_label 2 labels name 314
FUNC assemble 1 asm 347
FUNC run 1 program 605
FUNC test 4 name prog expect_status expect_output 1070
FUNC run_tests 0  1146
PUSH_INT 1
STORE OP_PUSH
PUSH_INT 2
STORE OP_POP
PUSH_INT 3
STORE OP_ADD
PUSH_INT 4
STORE OP_SUB
PUSH_INT 5
STORE OP_MUL
PUSH_INT 6
STORE OP_DIV
PUSH_INT 7
STORE OP_STORE
PUSH_INT 8
STORE OP_LOAD
PUSH_INT 9
STORE OP_EMIT
PUSH_INT 10
STORE OP_JMP
PUSH_INT 11
STORE OP_JNZ
PUSH_INT 12
STORE OP_HALT
PUSH_STR push
PUSH_INT 2
BUILD_LIST 2
PUSH_STR push
PUSH_INT 3
BUILD_LIST 2
PUSH_STR add
BUILD_LIST 1
PUSH_STR emit
BUILD_LIST 1
PUSH_STR halt
BUILD_LIST 1
BUILD_LIST 5
STORE prog_add
PUSH_STR push
PUSH_INT 5
BUILD_LIST 2
PUSH_STR store
PUSH_STR n
BUILD_LIST 2
PUSH_STR push
PUSH_INT 1
BUILD_LIST 2
PUSH_STR store
PUSH_STR m
BUILD_LIST 2
PUSH_STR push
PUSH_INT 1
BUILD_LIST 2
PUSH_STR store
PUSH_STR r
BUILD_LIST 2
PUSH_STR label
PUSH_STR loop
BUILD_LIST 2
PUSH_STR load
PUSH_STR r
BUILD_LIST 2
PUSH_STR load
PUSH_STR m
BUILD_LIST 2
PUSH_STR mul
BUILD_LIST 1
PUSH_STR store
PUSH_STR r
BUILD_LIST 2
PUSH_STR load
PUSH_STR r
BUILD_LIST 2
PUSH_STR emit
BUILD_LIST 1
PUSH_STR load
PUSH_STR m
BUILD_LIST 2
PUSH_STR load
PUSH_STR n
BUILD_LIST 2
PUSH_STR sub
BUILD_LIST 1
PUSH_STR jnz
PUSH_STR cont
BUILD_LIST 2
PUSH_STR jmp
PUSH_STR end
BUILD_LIST 2
PUSH_STR label
PUSH_STR cont
BUILD_LIST 2
PUSH_STR load
PUSH_STR m
BUILD_LIST 2
PUSH_STR push
PUSH_INT 1
BUILD_LIST 2
PUSH_STR add
BUILD_LIST 1
PUSH_STR store
PUSH_STR m
BUILD_LIST 2
PUSH_STR jmp
PUSH_STR loop
BUILD_LIST 2
PUSH_STR label
PUSH_STR end
BUILD_LIST 2
PUSH_STR halt
BUILD_LIST 1
BUILD_LIST 26
STORE prog_fact
PUSH_STR push
PUSH_INT 8
BUILD_LIST 2
PUSH_STR store
PUSH_STR n
BUILD_LIST 2
PUSH_STR push
PUSH_INT 0
BUILD_LIST 2
PUSH_STR store
PUSH_STR a
BUILD_LIST 2
PUSH_STR push
PUSH_INT 1
BUILD_LIST 2
PUSH_STR store
PUSH_STR b
BUILD_LIST 2
PUSH_STR label
PUSH_STR loop
BUILD_LIST 2
PUSH_STR load
PUSH_STR n
BUILD_LIST 2
PUSH_STR jnz
PUSH_STR body
BUILD_LIST 2
PUSH_STR jmp
PUSH_STR end
BUILD_LIST 2
PUSH_STR label
PUSH_STR body
BUILD_LIST 2
PUSH_STR load
PUSH_STR a
BUILD_LIST 2
PUSH_STR emit
BUILD_LIST 1
PUSH_STR load
PUSH_STR a
BUILD_LIST 2
PUSH_STR load
PUSH_STR b
BUILD_LIST 2
PUSH_STR add
BUILD_LIST 1
PUSH_STR store
PUSH_STR t
BUILD_LIST 2
PUSH_STR load
PUSH_STR b
BUILD_LIST 2
PUSH_STR store
PUSH_STR a
BUILD_LIST 2
PUSH_STR load
PUSH_STR t
BUILD_LIST 2
PUSH_STR store
PUSH_STR b
BUILD_LIST 2
PUSH_STR load
PUSH_STR n
BUILD_LIST 2
PUSH_STR push
PUSH_INT 1
BUILD_LIST 2
PUSH_STR sub
BUILD_LIST 1
PUSH_STR store
PUSH_STR n
BUILD_LIST 2
PUSH_STR jmp
PUSH_STR loop
BUILD_LIST 2
PUSH_STR label
PUSH_STR end
BUILD_LIST 2
PUSH_STR halt
BUILD_LIST 1
BUILD_LIST 28
STORE prog_fib
PUSH_STR push
PUSH_INT 1
BUILD_LIST 2
PUSH_STR push
PUSH_INT 0
BUILD_LIST 2
PUSH_STR div
BUILD_LIST 1
PUSH_STR halt
BUILD_LIST 1
BUILD_LIST 4
STORE prog_div0
PUSH_STR jmp
PUSH_STR missing
BUILD_LIST 2
PUSH_STR halt
BUILD_LIST 1
BUILD_LIST 2
STORE prog_badjump
PUSH_STR add
BUILD_LIST 1
PUSH_STR halt
BUILD_LIST 1
BUILD_LIST 2
STORE prog_underflow
CALL run_tests
POP
HALT
PUSH_INT 0
STORE sv_i
BUILD_LIST 0
STORE sv_entry
BUILD_LIST 0
STORE sv_new
LOAD sv_i
LOAD mem
BUILTIN length 1
LT
JUMP_IF_FALSE 272
LOAD mem
LOAD sv_i
INDEX
STORE sv_entry
LOAD sv_entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 267
LOAD name
LOAD val
BUILD_LIST 2
STORE sv_new
LOAD mem
PUSH_INT 0
LOAD sv_i
SLICE
LOAD sv_new
BUILD_LIST 1
ADD
LOAD mem
LOAD sv_i
PUSH_INT 1
ADD
LOAD mem
BUILTIN length 1
SLICE
ADD
STORE mem
LOAD mem
RET
JUMP 267
LOAD sv_i
PUSH_INT 1
ADD
STORE sv_i
JUMP 229
LOAD mem
LOAD name
LOAD val
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE mem
LOAD mem
RET
RET
PUSH_INT 0
STORE lv_i
BUILD_LIST 0
STORE lv_entry
LOAD lv_i
LOAD mem
BUILTIN length 1
LT
JUMP_IF_FALSE 311
LOAD mem
LOAD lv_i
INDEX
STORE lv_entry
LOAD lv_entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 306
LOAD lv_entry
PUSH_INT 1
INDEX
RET
JUMP 306
LOAD lv_i
PUSH_INT 1
ADD
STORE lv_i
JUMP 286
PUSH_INT 0
RET
RET
PUSH_INT 0
STORE fl_i
BUILD_LIST 0
STORE fl_entry
LOAD fl_i
LOAD labels
BUILTIN length 1
LT
JUMP_IF_FALSE 343
LOAD labels
LOAD fl_i
INDEX
STORE fl_entry
LOAD fl_entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 338
LOAD fl_entry
PUSH_INT 1
INDEX
RET
JUMP 338
LOAD fl_i
PUSH_INT 1
ADD
STORE fl_i
JUMP 318
PUSH_INT 1
NEG
RET
RET
BUILD_LIST 0
STORE labels
PUSH_INT 0
STORE pc
PUSH_INT 0
STORE i
BUILD_LIST 0
STORE inst
PUSH_BOOL 0
STORE op
LOAD i
LOAD asm
BUILTIN length 1
LT
JUMP_IF_FALSE 393
LOAD asm
LOAD i
INDEX
STORE inst
LOAD inst
PUSH_INT 0
INDEX
STORE op
LOAD op
PUSH_STR label
EQ
JUMP_IF_FALSE 384
LOAD labels
LOAD inst
PUSH_INT 1
INDEX
LOAD pc
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE labels
JUMP 388
LOAD pc
PUSH_INT 1
ADD
STORE pc
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 357
BUILD_LIST 0
STORE bytecode
PUSH_INT 0
STORE addr
PUSH_INT 0
STORE i
LOAD i
LOAD asm
BUILTIN length 1
LT
JUMP_IF_FALSE 600
LOAD asm
LOAD i
INDEX
STORE inst
LOAD inst
PUSH_INT 0
INDEX
STORE op
LOAD op
PUSH_STR push
EQ
JUMP_IF_FALSE 426
LOAD bytecode
LOAD OP_PUSH
LOAD inst
PUSH_INT 1
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR pop
EQ
JUMP_IF_FALSE 437
LOAD bytecode
LOAD OP_POP
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR add
EQ
JUMP_IF_FALSE 448
LOAD bytecode
LOAD OP_ADD
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR sub
EQ
JUMP_IF_FALSE 459
LOAD bytecode
LOAD OP_SUB
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR mul
EQ
JUMP_IF_FALSE 470
LOAD bytecode
LOAD OP_MUL
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR div
EQ
JUMP_IF_FALSE 481
LOAD bytecode
LOAD OP_DIV
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR store
EQ
JUMP_IF_FALSE 495
LOAD bytecode
LOAD OP_STORE
LOAD inst
PUSH_INT 1
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR load
EQ
JUMP_IF_FALSE 509
LOAD bytecode
LOAD OP_LOAD
LOAD inst
PUSH_INT 1
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR emit
EQ
JUMP_IF_FALSE 520
LOAD bytecode
LOAD OP_EMIT
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR jmp
EQ
JUMP_IF_FALSE 547
LOAD labels
LOAD inst
PUSH_INT 1
INDEX
CALL find_label
STORE addr
LOAD addr
PUSH_INT 1
NEG
EQ
JUMP_IF_FALSE 539
PUSH_STR BAD_LABEL
BUILD_LIST 1
RET
JUMP 539
LOAD bytecode
LOAD OP_JMP
LOAD addr
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR jnz
EQ
JUMP_IF_FALSE 574
LOAD labels
LOAD inst
PUSH_INT 1
INDEX
CALL find_label
STORE addr
LOAD addr
PUSH_INT 1
NEG
EQ
JUMP_IF_FALSE 566
PUSH_STR BAD_LABEL
BUILD_LIST 1
RET
JUMP 566
LOAD bytecode
LOAD OP_JNZ
LOAD addr
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR halt
EQ
JUMP_IF_FALSE 585
LOAD bytecode
LOAD OP_HALT
BUILD_LIST 1
BUILD_LIST 1
ADD
STORE bytecode
JUMP 595
LOAD op
PUSH_STR label
EQ
JUMP_IF_FALSE 592
LOAD pc
STORE pc
JUMP 595
PUSH_STR BAD_OPCODE
BUILD_LIST 1
RET
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 399
PUSH_STR ok
LOAD bytecode
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE pc
BUILD_LIST 0
STORE stack
BUILD_LIST 0
STORE memory
BUILD_LIST 0
STORE output
PUSH_STR ok
STORE status
BUILD_LIST 0
STORE instr
PUSH_INT 0
STORE opcode
PUSH_BOOL 0
STORE operand
PUSH_INT 0
STORE lhs
PUSH_INT 0
STORE rhs
PUSH_INT 0
STORE cond
LOAD pc
LOAD program
BUILTIN length 1
LT
JUMP_IF_FALSE 1065
LOAD program
LOAD pc
INDEX
STORE instr
LOAD pc
PUSH_INT 1
ADD
STORE pc
LOAD instr
PUSH_INT 0
INDEX
STORE opcode
LOAD opcode
LOAD OP_PUSH
EQ
JUMP_IF_FALSE 656
LOAD stack
LOAD instr
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_POP
EQ
JUMP_IF_FALSE 678
LOAD stack
BUILTIN length 1
PUSH_INT 0
EQ
JUMP_IF_FALSE 669
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 669
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_ADD
EQ
JUMP_IF_FALSE 729
LOAD stack
BUILTIN length 1
PUSH_INT 2
LT
JUMP_IF_FALSE 691
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 691
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE rhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE lhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD lhs
LOAD rhs
ADD
BUILD_LIST 1
ADD
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_SUB
EQ
JUMP_IF_FALSE 780
LOAD stack
BUILTIN length 1
PUSH_INT 2
LT
JUMP_IF_FALSE 742
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 742
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE rhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE lhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD lhs
LOAD rhs
SUB
BUILD_LIST 1
ADD
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_MUL
EQ
JUMP_IF_FALSE 831
LOAD stack
BUILTIN length 1
PUSH_INT 2
LT
JUMP_IF_FALSE 793
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 793
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE rhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE lhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD lhs
LOAD rhs
MUL
BUILD_LIST 1
ADD
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_DIV
EQ
JUMP_IF_FALSE 890
LOAD stack
BUILTIN length 1
PUSH_INT 2
LT
JUMP_IF_FALSE 844
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 844
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE rhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD rhs
PUSH_INT 0
EQ
JUMP_IF_FALSE 867
PUSH_STR DIV_ZERO
STORE status
JUMP 1065
JUMP 867
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE lhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD stack
LOAD lhs
LOAD rhs
DIV
BUILD_LIST 1
ADD
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_STORE
EQ
JUMP_IF_FALSE 928
LOAD stack
BUILTIN length 1
PUSH_INT 0
EQ
JUMP_IF_FALSE 903
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 903
LOAD instr
PUSH_INT 1
INDEX
STORE operand
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE rhs
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD memory
LOAD operand
LOAD rhs
CALL store_var
STORE memory
JUMP 1064
LOAD opcode
LOAD OP_LOAD
EQ
JUMP_IF_FALSE 944
LOAD instr
PUSH_INT 1
INDEX
STORE operand
LOAD stack
LOAD memory
LOAD operand
CALL load_var
BUILD_LIST 1
ADD
STORE stack
JUMP 1064
LOAD opcode
LOAD OP_EMIT
EQ
JUMP_IF_FALSE 970
LOAD stack
BUILTIN length 1
PUSH_INT 0
EQ
JUMP_IF_FALSE 957
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 957
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE rhs
LOAD output
LOAD rhs
BUILD_LIST 1
ADD
STORE output
JUMP 1064
LOAD opcode
LOAD OP_JMP
EQ
JUMP_IF_FALSE 998
LOAD instr
PUSH_INT 1
INDEX
STORE operand
LOAD operand
PUSH_INT 0
LT
JUMP_IF_FALSE 986
PUSH_STR BAD_JUMP
STORE status
JUMP 1065
JUMP 986
LOAD operand
LOAD program
BUILTIN length 1
GE
JUMP_IF_FALSE 995
PUSH_STR BAD_JUMP
STORE status
JUMP 1065
JUMP 995
LOAD operand
STORE pc
JUMP 1064
LOAD opcode
LOAD OP_JNZ
EQ
JUMP_IF_FALSE 1055
LOAD stack
BUILTIN length 1
PUSH_INT 0
EQ
JUMP_IF_FALSE 1011
PUSH_STR STACK_UNDERFLOW
STORE status
JUMP 1065
JUMP 1011
LOAD stack
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
INDEX
STORE cond
LOAD stack
PUSH_INT 0
LOAD stack
BUILTIN length 1
PUSH_INT 1
SUB
SLICE
STORE stack
LOAD cond
PUSH_INT 0
NE
JUMP_IF_FALSE 1054
LOAD instr
PUSH_INT 1
INDEX
STORE operand
LOAD operand
PUSH_INT 0
LT
JUMP_IF_FALSE 1042
PUSH_STR BAD_JUMP
STORE status
JUMP 1065
JUMP 1042
LOAD operand
LOAD program
BUILTIN length 1
GE
JUMP_IF_FALSE 1051
PUSH_STR BAD_JUMP
STORE status
JUMP 1065
JUMP 1051
LOAD operand
STORE pc
JUMP 1054
JUMP 1064
LOAD opcode
LOAD OP_HALT
EQ
JUMP_IF_FALSE 1061
JUMP 1065
JUMP 1064
PUSH_STR BAD_OPCODE
STORE status
JUMP 1065
JUMP 627
LOAD status
LOAD output
BUILD_LIST 2
RET
RET
LOAD prog
CALL assemble
STORE asm_res
LOAD asm_res
PUSH_INT 0
INDEX
PUSH_STR ok
NE
JUMP_IF_FALSE 1103
LOAD asm_res
PUSH_INT 0
INDEX
LOAD expect_status
EQ
JUMP_IF_FALSE 1090
LOAD name
PUSH_STR : pass
ADD
EMIT
JUMP 1100
LOAD name
PUSH_STR : fail (asm 
ADD
LOAD asm_res
PUSH_INT 0
INDEX
ADD
PUSH_STR )
ADD
EMIT
PUSH_INT 0
RET
JUMP 1103
LOAD asm_res
PUSH_INT 1
INDEX
STORE bytecode
LOAD bytecode
CALL run
STORE run_res
LOAD run_res
PUSH_INT 0
INDEX
STORE status
LOAD run_res
PUSH_INT 1
INDEX
STORE out
LOAD status
LOAD expect_status
EQ
LOAD out
LOAD expect_output
EQ
AND
JUMP_IF_FALSE 1131
LOAD name
PUSH_STR : pass
ADD
EMIT
JUMP 1143
LOAD name
PUSH_STR : fail (status=
ADD
LOAD status
ADD
PUSH_STR  out=
ADD
LOAD out
ADD
PUSH_STR )
ADD
EMIT
PUSH_INT 0
RET
RET
PUSH_STR prog_add
LOAD prog_add
PUSH_STR ok
PUSH_INT 5
BUILD_LIST 1
CALL test
POP
PUSH_STR prog_fact
LOAD prog_fact
PUSH_STR ok
PUSH_INT 1
PUSH_INT 2
PUSH_INT 6
PUSH_INT 24
PUSH_INT 120
BUILD_LIST 5
CALL test
POP
PUSH_STR prog_fib
LOAD prog_fib
PUSH_STR ok
PUSH_INT 0
PUSH_INT 1
PUSH_INT 1
PUSH_INT 2
PUSH_INT 3
PUSH_INT 5
PUSH_INT 8
PUSH_INT 13
BUILD_LIST 8
CALL test
POP
PUSH_STR prog_div0
LOAD prog_div0
PUSH_STR DIV_ZERO
BUILD_LIST 0
CALL test
POP
PUSH_STR prog_badjump
LOAD prog_badjump
PUSH_STR BAD_LABEL
BUILD_LIST 0
CALL test
POP
PUSH_STR prog_underflow
LOAD prog_underflow
PUSH_STR STACK_UNDERFLOW
BUILD_LIST 0
CALL test
POP
RET