FUNC is_digit 1 ch 20
FUNC is_alpha 1 ch 29
FUNC is_alnum 1 ch 50
FUNC read_number 2 src i 57
FUNC read_binary 2 src i 97
FUNC read_ident 2 src i 144
FUNC tokenize 1 src 174
FUNC parse 1 source 961
FUNC parse_program 2 tokens i 973
FUNC parse_statement 2 tokens i 1006
FUNC parse_block 2 tokens i 1616
FUNC parse_expression 2 tokens i 1667
FUNC parse_or 2 tokens i 1671
FUNC parse_and 2 tokens i 1730
FUNC parse_comparison 2 tokens i 1789
FUNC parse_add_sub 2 tokens i 1966
FUNC parse_term 2 tokens i 2055
FUNC parse_shift 2 tokens i 2166
FUNC parse_bit_and 2 tokens i 2255
FUNC parse_bit_xor 2 tokens i 2314
FUNC parse_bit_or 2 tokens i 2373
FUNC parse_factor 2 tokens i 2432
FUNC lookup_var 2 env name 3096
FUNC env_set 3 env name value 3167
FUNC copy_env 1 env 3212
FUNC dirname 1 path 3242
FUNC join_path 2 base rel 3275
FUNC call_function 3 func args env 3296
FUNC import_module 1 path 3428
FUNC eval_expr 2 expr env 3697
FUNC execute 3 stmts env is_global 4326
FUNC run 1 source 4736
FUNC run_file_with_args 2 path file_args 4773
FUNC run_file 1 path 4862
PUSH_INT 0
STORE tok_len
BUILD_LIST 0
STORE global_env
PUSH_STR "."
STORE current_dir
BUILD_LIST 0
STORE loaded_modules
LOAD args
BUILTIN length 1
PUSH_INT 0
GT
JUMP_IF_FALSE 19
LOAD args
PUSH_INT 0
INDEX
CALL run_file
POP
JUMP 19
HALT
LOAD ch
PUSH_STR "0"
GE
LOAD ch
PUSH_STR "9"
LE
AND
RET
RET
LOAD ch
PUSH_STR "a"
GE
LOAD ch
PUSH_STR "z"
LE
AND
LOAD ch
PUSH_STR "A"
GE
LOAD ch
PUSH_STR "Z"
LE
AND
OR
LOAD ch
PUSH_STR "_"
EQ
OR
RET
RET
LOAD ch
CALL is_alpha
LOAD ch
CALL is_digit
OR
RET
RET
PUSH_INT 0
STORE num
PUSH_STR ""
STORE c
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
CALL is_digit
AND
JUMP_IF_FALSE 92
LOAD src
LOAD i
INDEX
STORE c
LOAD num
PUSH_INT 10
MUL
LOAD c
BUILTIN ascii 1
ADD
PUSH_STR "0"
BUILTIN ascii 1
SUB
STORE num
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 64
LOAD num
LOAD i
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE num
PUSH_STR ""
STORE c
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
PUSH_STR "0"
EQ
LOAD src
LOAD i
INDEX
PUSH_STR "1"
EQ
OR
AND
JUMP_IF_FALSE 139
LOAD src
LOAD i
INDEX
STORE c
LOAD num
PUSH_INT 2
MUL
LOAD c
BUILTIN ascii 1
ADD
PUSH_STR "0"
BUILTIN ascii 1
SUB
STORE num
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 104
LOAD num
LOAD i
BUILD_LIST 2
RET
RET
PUSH_STR ""
STORE s
LOAD src
BUILTIN length 1
STORE n
LOAD i
LOAD n
LT
LOAD src
LOAD i
INDEX
CALL is_alnum
AND
JUMP_IF_FALSE 169
LOAD s
LOAD src
LOAD i
INDEX
ADD
STORE s
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 149
LOAD s
LOAD i
BUILD_LIST 2
RET
RET
BUILD_DICT 0
STORE tokens
PUSH_INT 0
STORE n
PUSH_INT 0
STORE i
PUSH_STR ""
STORE c
BUILD_LIST 0
STORE res
PUSH_STR ""
STORE word
PUSH_STR ""
STORE s
LOAD src
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD src
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD src
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD src
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD src
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 249
PUSH_INT 6
STORE i
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 248
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 248
JUMP 249
LOAD i
LOAD src_len
LT
JUMP_IF_FALSE 956
LOAD src
LOAD i
INDEX
STORE c
LOAD c
PUSH_STR " "
EQ
LOAD c
PUSH_STR "\t"
EQ
OR
JUMP_IF_FALSE 270
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "\n"
EQ
JUMP_IF_FALSE 279
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "#"
EQ
JUMP_IF_FALSE 299
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\n"
NE
AND
JUMP_IF_FALSE 298
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 283
JUMP 955
LOAD c
PUSH_STR ":"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 332
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ":="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR ":"
EQ
JUMP_IF_FALSE 351
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ":"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "="
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 384
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "=="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "!"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 417
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "!="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "<"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 450
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "<="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR ">"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "="
EQ
AND
JUMP_IF_FALSE 483
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ">="
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "<"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "<"
EQ
AND
JUMP_IF_FALSE 516
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR "<<"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR ">"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR ">"
EQ
AND
JUMP_IF_FALSE 549
LOAD tokens
LOAD n
PUSH_STR "symbol"
PUSH_STR ">>"
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "/"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "*"
EQ
AND
JUMP_IF_FALSE 601
LOAD i
PUSH_INT 2
ADD
STORE i
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "*"
NE
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "/"
NE
OR
AND
JUMP_IF_FALSE 596
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 571
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "("
EQ
LOAD c
PUSH_STR ")"
EQ
OR
LOAD c
PUSH_STR "{"
EQ
OR
LOAD c
PUSH_STR "}"
EQ
OR
LOAD c
PUSH_STR ","
EQ
OR
LOAD c
PUSH_STR "+"
EQ
OR
LOAD c
PUSH_STR "-"
EQ
OR
LOAD c
PUSH_STR "*"
EQ
OR
LOAD c
PUSH_STR "/"
EQ
OR
LOAD c
PUSH_STR "%"
EQ
OR
LOAD c
PUSH_STR "<"
EQ
OR
LOAD c
PUSH_STR ">"
EQ
OR
LOAD c
PUSH_STR "["
EQ
OR
LOAD c
PUSH_STR "]"
EQ
OR
LOAD c
PUSH_STR "&"
EQ
OR
LOAD c
PUSH_STR "|"
EQ
OR
LOAD c
PUSH_STR "^"
EQ
OR
LOAD c
PUSH_STR "~"
EQ
OR
LOAD c
PUSH_STR "."
EQ
OR
JUMP_IF_FALSE 692
LOAD tokens
LOAD n
PUSH_STR "symbol"
LOAD c
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 955
LOAD c
PUSH_STR "0"
EQ
LOAD i
PUSH_INT 1
ADD
LOAD src_len
LT
AND
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "b"
EQ
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "B"
EQ
OR
AND
JUMP_IF_FALSE 743
LOAD i
PUSH_INT 2
ADD
STORE i
LOAD src
LOAD i
CALL read_binary
STORE res
LOAD tokens
LOAD n
PUSH_STR "number"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD res
PUSH_INT 1
INDEX
STORE i
JUMP 955
LOAD c
CALL is_digit
JUMP_IF_FALSE 767
LOAD src
LOAD i
CALL read_number
STORE res
LOAD tokens
LOAD n
PUSH_STR "number"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
LOAD res
PUSH_INT 1
INDEX
STORE i
JUMP 955
LOAD c
PUSH_STR "\""
EQ
JUMP_IF_FALSE 836
LOAD i
PUSH_INT 1
ADD
STORE i
PUSH_STR ""
STORE s
LOAD i
LOAD src_len
LT
LOAD src
LOAD i
INDEX
PUSH_STR "\""
NE
AND
JUMP_IF_FALSE 821
LOAD src
LOAD i
INDEX
PUSH_STR "\\"
EQ
LOAD src
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_STR "n"
EQ
AND
JUMP_IF_FALSE 810
LOAD s
PUSH_STR "\n"
ADD
STORE s
LOAD i
PUSH_INT 2
ADD
STORE i
JUMP 820
LOAD s
LOAD src
LOAD i
INDEX
ADD
STORE s
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 777
LOAD i
PUSH_INT 1
ADD
STORE i
LOAD tokens
LOAD n
PUSH_STR "string"
LOAD s
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 955
LOAD src
LOAD i
CALL read_ident
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE word
LOAD res
PUSH_INT 1
INDEX
STORE i
LOAD word
PUSH_STR "alloc"
EQ
LOAD word
PUSH_STR "emit"
EQ
OR
LOAD word
PUSH_STR "proc"
EQ
OR
LOAD word
PUSH_STR "return"
EQ
OR
LOAD word
PUSH_STR "if"
EQ
OR
LOAD word
PUSH_STR "else"
EQ
OR
LOAD word
PUSH_STR "elif"
EQ
OR
LOAD word
PUSH_STR "loop"
EQ
OR
LOAD word
PUSH_STR "break"
EQ
OR
LOAD word
PUSH_STR "and"
EQ
OR
LOAD word
PUSH_STR "or"
EQ
OR
LOAD word
PUSH_STR "facts"
EQ
OR
LOAD word
PUSH_STR "import"
EQ
OR
LOAD word
PUSH_STR "as"
EQ
OR
JUMP_IF_FALSE 915
LOAD tokens
LOAD n
PUSH_STR "kw"
LOAD word
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 955
LOAD word
PUSH_STR "true"
EQ
JUMP_IF_FALSE 930
LOAD tokens
LOAD n
PUSH_STR "bool"
PUSH_BOOL 1
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 955
LOAD word
PUSH_STR "false"
EQ
JUMP_IF_FALSE 945
LOAD tokens
LOAD n
PUSH_STR "bool"
PUSH_BOOL 0
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 955
LOAD tokens
LOAD n
PUSH_STR "ident"
LOAD word
BUILD_LIST 2
STORE_INDEX
LOAD n
PUSH_INT 1
ADD
STORE n
JUMP 249
LOAD n
STORE tok_len
LOAD tokens
RET
RET
LOAD source
CALL tokenize
STORE tokens
LOAD tokens
PUSH_INT 0
CALL parse_program
STORE res
LOAD res
PUSH_INT 0
INDEX
RET
RET
BUILD_LIST 0
STORE stmts
PUSH_BOOL 0
LOAD i
BUILD_LIST 2
STORE res
LOAD res
PUSH_INT 1
INDEX
LOAD tok_len
LT
JUMP_IF_FALSE 999
LOAD tokens
LOAD res
PUSH_INT 1
INDEX
CALL parse_statement
STORE res
LOAD stmts
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE stmts
JUMP 979
LOAD stmts
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
INDEX
STORE t
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "alloc"
EQ
AND
JUMP_IF_FALSE 1048
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
STORE name
LOAD tokens
LOAD i
PUSH_INT 3
ADD
CALL parse_expression
STORE res
PUSH_STR "decl"
LOAD name
PUSH_INT 1
INDEX
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "emit"
EQ
AND
JUMP_IF_FALSE 1077
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "emit"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "return"
EQ
AND
JUMP_IF_FALSE 1106
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "return"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "break"
EQ
AND
JUMP_IF_FALSE 1126
PUSH_STR "break"
BUILD_LIST 1
LOAD i
PUSH_INT 1
ADD
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "loop"
EQ
AND
JUMP_IF_FALSE 1164
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res_cond
LOAD tokens
LOAD res_cond
PUSH_INT 1
INDEX
CALL parse_block
STORE res_block
PUSH_STR "loop"
LOAD res_cond
PUSH_INT 0
INDEX
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res_block
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "if"
EQ
AND
JUMP_IF_FALSE 1333
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res_cond
LOAD tokens
LOAD res_cond
PUSH_INT 1
INDEX
CALL parse_block
STORE res_then
LOAD res_then
PUSH_INT 1
INDEX
STORE j
BUILD_LIST 0
STORE elifs
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res_elif
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res_block
BUILD_LIST 0
STORE else_block
PUSH_INT 0
STORE k
PUSH_BOOL 0
STORE pair
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "elif"
EQ
AND
JUMP_IF_FALSE 1256
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE res_elif
LOAD tokens
LOAD res_elif
PUSH_INT 1
INDEX
CALL parse_block
STORE res_block
LOAD elifs
LOAD res_elif
PUSH_INT 0
INDEX
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE elifs
LOAD res_block
PUSH_INT 1
INDEX
STORE j
JUMP 1208
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "else"
EQ
AND
JUMP_IF_FALSE 1291
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_block
STORE res_block
LOAD res_block
PUSH_INT 0
INDEX
STORE else_block
LOAD res_block
PUSH_INT 1
INDEX
STORE j
JUMP 1291
LOAD elifs
BUILTIN length 1
PUSH_INT 1
SUB
STORE k
LOAD k
PUSH_INT 0
GE
JUMP_IF_FALSE 1320
LOAD elifs
LOAD k
INDEX
STORE pair
PUSH_STR "if"
LOAD pair
PUSH_INT 0
INDEX
LOAD pair
PUSH_INT 1
INDEX
LOAD else_block
BUILD_LIST 4
BUILD_LIST 1
STORE else_block
LOAD k
PUSH_INT 1
SUB
STORE k
JUMP 1296
PUSH_STR "if"
LOAD res_cond
PUSH_INT 0
INDEX
LOAD res_then
PUSH_INT 0
INDEX
LOAD else_block
BUILD_LIST 4
LOAD j
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "proc"
EQ
AND
JUMP_IF_FALSE 1435
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
STORE name
LOAD i
PUSH_INT 3
ADD
STORE j
BUILD_LIST 0
STORE params
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ")"
NE
OR
JUMP_IF_FALSE 1414
PUSH_BOOL 1
JUMP_IF_FALSE 1413
LOAD params
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE params
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 1411
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 1412
JUMP 1413
JUMP 1375
JUMP 1414
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
CALL parse_block
STORE res_block
PUSH_STR "func_def"
LOAD name
LOAD params
LOAD res_block
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD res_block
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "import"
EQ
AND
JUMP_IF_FALSE 1473
LOAD tokens
LOAD i
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
STORE path
LOAD tokens
LOAD i
PUSH_INT 3
ADD
INDEX
PUSH_INT 1
INDEX
STORE alias
PUSH_STR "import"
LOAD path
LOAD alias
BUILD_LIST 3
LOAD i
PUSH_INT 4
ADD
BUILD_LIST 2
RET
JUMP 1615
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "facts"
EQ
AND
JUMP_IF_FALSE 1502
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
PUSH_STR "facts"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1615
LOAD tokens
LOAD i
CALL parse_factor
STORE lval_res
LOAD lval_res
PUSH_INT 1
INDEX
STORE j
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ":="
EQ
AND
JUMP_IF_FALSE 1607
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE val_res
LOAD lval_res
PUSH_INT 0
INDEX
STORE target
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 1560
PUSH_STR "assign"
LOAD target
PUSH_INT 1
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1606
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "dot"
EQ
JUMP_IF_FALSE 1583
PUSH_STR "attr_assign"
LOAD target
PUSH_INT 1
INDEX
LOAD target
PUSH_INT 2
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1606
LOAD target
PUSH_INT 0
INDEX
PUSH_STR "index"
EQ
JUMP_IF_FALSE 1606
PUSH_STR "index_assign"
LOAD target
PUSH_INT 1
INDEX
LOAD target
PUSH_INT 2
INDEX
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 4
LOAD val_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 1606
JUMP 1607
LOAD lval_res
PUSH_INT 0
INDEX
LOAD lval_res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
RET
BUILD_LIST 0
STORE stmts
LOAD i
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD j
PUSH_INT 1
ADD
STORE j
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "}"
NE
OR
JUMP_IF_FALSE 1660
LOAD tokens
LOAD j
CALL parse_statement
STORE res
LOAD stmts
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE stmts
LOAD res
PUSH_INT 1
INDEX
STORE j
JUMP 1628
LOAD stmts
LOAD j
PUSH_INT 1
ADD
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
TCALL parse_or
RET
LOAD tokens
LOAD i
CALL parse_and
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "or"
EQ
AND
JUMP_IF_FALSE 1725
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_and
STORE right_res
PUSH_STR "or"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1687
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_comparison
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "kw"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "and"
EQ
AND
JUMP_IF_FALSE 1784
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_comparison
STORE right_res
PUSH_STR "and"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1746
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_or
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "=="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">"
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">="
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "!="
EQ
OR
AND
JUMP_IF_FALSE 1961
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_or
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<"
EQ
JUMP_IF_FALSE 1893
PUSH_STR "lt"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1956
LOAD op
PUSH_INT 1
INDEX
PUSH_STR ">"
EQ
JUMP_IF_FALSE 1907
PUSH_STR "gt"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1956
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<="
EQ
JUMP_IF_FALSE 1921
PUSH_STR "le"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1956
LOAD op
PUSH_INT 1
INDEX
PUSH_STR ">="
EQ
JUMP_IF_FALSE 1935
PUSH_STR "ge"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1956
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "=="
EQ
JUMP_IF_FALSE 1949
PUSH_STR "eq"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 1956
PUSH_STR "ne"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1809
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_term
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "+"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "-"
EQ
OR
AND
JUMP_IF_FALSE 2050
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_term
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "+"
EQ
JUMP_IF_FALSE 2038
PUSH_STR "add"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2045
PUSH_STR "sub"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 1986
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_factor
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "*"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "/"
EQ
OR
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "%"
EQ
OR
AND
JUMP_IF_FALSE 2161
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_factor
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "*"
EQ
JUMP_IF_FALSE 2135
PUSH_STR "mul"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2156
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "/"
EQ
JUMP_IF_FALSE 2149
PUSH_STR "div"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2156
PUSH_STR "mod"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2075
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_add_sub
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE op
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "<<"
EQ
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR ">>"
EQ
OR
AND
JUMP_IF_FALSE 2250
LOAD tokens
LOAD j
INDEX
STORE op
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_add_sub
STORE right_res
LOAD op
PUSH_INT 1
INDEX
PUSH_STR "<<"
EQ
JUMP_IF_FALSE 2238
PUSH_STR "shl"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
JUMP 2245
PUSH_STR "shr"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2186
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_shift
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "&"
EQ
AND
JUMP_IF_FALSE 2309
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_shift
STORE right_res
PUSH_STR "band"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2271
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_and
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "^"
EQ
AND
JUMP_IF_FALSE 2368
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_and
STORE right_res
PUSH_STR "bxor"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2330
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
CALL parse_bit_xor
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE left
LOAD res
PUSH_INT 1
INDEX
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE right_res
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "|"
EQ
AND
JUMP_IF_FALSE 2427
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_bit_xor
STORE right_res
PUSH_STR "bor"
LOAD left
LOAD right_res
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE left
LOAD right_res
PUSH_INT 1
INDEX
STORE j
JUMP 2389
LOAD left
LOAD j
BUILD_LIST 2
RET
RET
LOAD tokens
LOAD i
INDEX
STORE t
PUSH_BOOL 0
STORE node
LOAD i
STORE j
PUSH_INT 0
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "-"
EQ
AND
JUMP_IF_FALSE 2476
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_factor
STORE res
PUSH_STR "unary"
PUSH_STR "sub"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 3
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "~"
EQ
AND
JUMP_IF_FALSE 2505
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_factor
STORE res
PUSH_STR "bitnot"
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 2
LOAD res
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "number"
EQ
JUMP_IF_FALSE 2522
PUSH_STR "number"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "bool"
EQ
JUMP_IF_FALSE 2539
PUSH_STR "bool"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "string"
EQ
JUMP_IF_FALSE 2556
PUSH_STR "string"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 2573
PUSH_STR "ident"
LOAD t
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "["
EQ
AND
JUMP_IF_FALSE 2661
BUILD_LIST 0
STORE elems
LOAD i
PUSH_INT 1
ADD
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR "]"
NE
OR
JUMP_IF_FALSE 2652
PUSH_BOOL 1
JUMP_IF_FALSE 2651
LOAD tokens
LOAD k
CALL parse_expression
STORE res
LOAD elems
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE elems
LOAD res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2649
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2650
JUMP 2651
JUMP 2611
JUMP 2652
PUSH_STR "list"
LOAD elems
BUILD_LIST 2
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "{"
EQ
AND
JUMP_IF_FALSE 2813
BUILD_LIST 0
STORE pairs
LOAD i
PUSH_INT 1
ADD
STORE k
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE val_res
PUSH_STR "string"
PUSH_STR ""
BUILD_LIST 2
STORE key_node
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR "}"
NE
OR
JUMP_IF_FALSE 2804
PUSH_BOOL 1
JUMP_IF_FALSE 2803
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "string"
EQ
JUMP_IF_FALSE 2726
PUSH_STR "string"
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE key_node
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2759
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 2747
PUSH_STR "string"
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
BUILD_LIST 2
STORE key_node
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2759
LOAD tokens
LOAD k
CALL parse_expression
STORE val_res
LOAD val_res
PUSH_INT 0
INDEX
STORE key_node
LOAD val_res
PUSH_INT 1
INDEX
STORE k
LOAD k
PUSH_INT 1
ADD
STORE k
LOAD tokens
LOAD k
CALL parse_expression
STORE val_res
LOAD pairs
LOAD key_node
LOAD val_res
PUSH_INT 0
INDEX
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE pairs
LOAD val_res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2801
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2802
JUMP 2803
JUMP 2703
JUMP 2804
PUSH_STR "dict"
LOAD pairs
BUILD_LIST 2
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 2850
LOAD t
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD t
PUSH_INT 1
INDEX
PUSH_STR "("
EQ
AND
JUMP_IF_FALSE 2842
LOAD tokens
LOAD i
PUSH_INT 1
ADD
CALL parse_expression
STORE res
LOAD res
PUSH_INT 0
INDEX
STORE node
LOAD res
PUSH_INT 1
INDEX
PUSH_INT 1
ADD
STORE j
JUMP 2850
PUSH_STR "number"
PUSH_INT 0
BUILD_LIST 2
STORE node
LOAD i
PUSH_INT 1
ADD
STORE j
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE inner
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE end_res
BUILD_LIST 0
STORE args
PUSH_BOOL 0
PUSH_INT 0
BUILD_LIST 2
STORE res
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
STORE attr
LOAD j
LOAD tok_len
LT
LOAD tokens
LOAD j
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
AND
JUMP_IF_FALSE 3091
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "("
EQ
JUMP_IF_FALSE 2961
LOAD j
PUSH_INT 1
ADD
STORE k
BUILD_LIST 0
STORE args
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
NE
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ")"
NE
OR
JUMP_IF_FALSE 2951
PUSH_BOOL 1
JUMP_IF_FALSE 2950
LOAD tokens
LOAD k
CALL parse_expression
STORE res
LOAD args
LOAD res
PUSH_INT 0
INDEX
BUILD_LIST 1
ADD
STORE args
LOAD res
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ","
EQ
AND
JUMP_IF_FALSE 2948
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 2949
JUMP 2950
JUMP 2910
JUMP 2951
PUSH_STR "func_call"
LOAD node
LOAD args
BUILD_LIST 3
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 3090
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "["
EQ
JUMP_IF_FALSE 3063
LOAD tokens
LOAD j
PUSH_INT 1
ADD
CALL parse_expression
STORE inner
LOAD inner
PUSH_INT 1
INDEX
STORE k
LOAD tokens
LOAD k
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
INDEX
PUSH_INT 1
INDEX
PUSH_STR ":"
EQ
AND
JUMP_IF_FALSE 3051
LOAD tokens
LOAD k
PUSH_INT 1
ADD
INDEX
PUSH_INT 0
INDEX
PUSH_STR "symbol"
EQ
LOAD tokens
LOAD k
PUSH_INT 1
ADD
INDEX
PUSH_INT 1
INDEX
PUSH_STR "]"
EQ
AND
JUMP_IF_FALSE 3028
PUSH_STR "slice"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
PUSH_BOOL 0
BUILD_LIST 4
STORE node
LOAD k
PUSH_INT 2
ADD
STORE j
JUMP 3050
LOAD tokens
LOAD k
PUSH_INT 1
ADD
CALL parse_expression
STORE end_res
PUSH_STR "slice"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
LOAD end_res
PUSH_INT 0
INDEX
BUILD_LIST 4
STORE node
LOAD end_res
PUSH_INT 1
INDEX
PUSH_INT 1
ADD
STORE j
JUMP 3062
PUSH_STR "index"
LOAD node
LOAD inner
PUSH_INT 0
INDEX
BUILD_LIST 3
STORE node
LOAD k
PUSH_INT 1
ADD
STORE j
JUMP 3090
LOAD tokens
LOAD j
INDEX
PUSH_INT 1
INDEX
PUSH_STR "."
EQ
JUMP_IF_FALSE 3089
LOAD tokens
LOAD j
PUSH_INT 1
ADD
INDEX
STORE attr
PUSH_STR "dot"
LOAD node
LOAD attr
PUSH_INT 1
INDEX
BUILD_LIST 3
STORE node
LOAD j
PUSH_INT 2
ADD
STORE j
JUMP 3090
JUMP 3091
JUMP 2868
LOAD node
LOAD j
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3129
LOAD env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3124
PUSH_BOOL 1
LOAD entry
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 3124
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3103
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD global_env
BUILTIN length 1
STORE global_len
LOAD i
LOAD global_len
LT
JUMP_IF_FALSE 3162
LOAD global_env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3157
PUSH_BOOL 1
LOAD entry
PUSH_INT 1
INDEX
BUILD_LIST 2
RET
JUMP 3157
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3136
PUSH_BOOL 0
PUSH_BOOL 0
BUILD_LIST 2
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3202
LOAD env
LOAD i
INDEX
STORE entry
LOAD entry
PUSH_INT 0
INDEX
LOAD name
EQ
JUMP_IF_FALSE 3197
LOAD env
LOAD i
LOAD name
LOAD value
BUILD_LIST 2
STORE_INDEX
LOAD env
RET
JUMP 3197
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3174
LOAD env
LOAD name
LOAD value
BUILD_LIST 2
BUILD_LIST 1
ADD
STORE env
LOAD env
RET
RET
BUILD_LIST 0
STORE result
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE entry
LOAD env
BUILTIN length 1
STORE env_len
LOAD i
LOAD env_len
LT
JUMP_IF_FALSE 3239
LOAD env
LOAD i
INDEX
STORE entry
LOAD result
LOAD entry
BUILD_LIST 1
ADD
STORE result
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3221
LOAD result
RET
RET
LOAD path
BUILTIN length 1
PUSH_INT 1
SUB
STORE i
LOAD i
PUSH_INT 0
GE
LOAD path
LOAD i
INDEX
PUSH_STR "/"
NE
AND
JUMP_IF_FALSE 3262
LOAD i
PUSH_INT 1
SUB
STORE i
JUMP 3247
LOAD i
PUSH_INT 0
GE
JUMP_IF_FALSE 3272
LOAD path
PUSH_INT 0
LOAD i
SLICE
RET
JUMP 3272
PUSH_STR "."
RET
RET
LOAD rel
BUILTIN length 1
PUSH_INT 0
GT
LOAD rel
PUSH_INT 0
INDEX
PUSH_STR "/"
EQ
AND
JUMP_IF_FALSE 3289
LOAD rel
RET
JUMP 3289
LOAD base
PUSH_STR "/"
ADD
LOAD rel
ADD
RET
RET
LOAD func
PUSH_INT 0
INDEX
PUSH_STR "function"
EQ
JUMP_IF_FALSE 3370
LOAD func
PUSH_INT 1
INDEX
STORE params
LOAD func
PUSH_INT 2
INDEX
STORE body
LOAD func
PUSH_INT 3
INDEX
STORE captured
LOAD captured
STORE base
LOAD captured
PUSH_STR "global"
EQ
JUMP_IF_FALSE 3323
LOAD global_env
STORE base
JUMP 3323
LOAD base
CALL copy_env
STORE local
PUSH_INT 0
STORE i
LOAD params
BUILTIN length 1
STORE params_len
LOAD i
LOAD params_len
LT
JUMP_IF_FALSE 3349
LOAD local
LOAD params
LOAD i
INDEX
LOAD args
LOAD i
INDEX
CALL env_set
STORE local
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3331
BUILD_LIST 0
STORE res
LOAD body
LOAD local
PUSH_BOOL 0
CALL execute
STORE res
LOAD res
PUSH_INT 0
INDEX
PUSH_STR "return"
EQ
JUMP_IF_FALSE 3367
LOAD res
PUSH_INT 1
INDEX
RET
JUMP 3367
PUSH_BOOL 0
RET
JUMP 3427
LOAD func
PUSH_INT 0
INDEX
PUSH_STR "builtin"
EQ
JUMP_IF_FALSE 3423
LOAD func
PUSH_INT 1
INDEX
STORE name
LOAD name
PUSH_STR "length"
EQ
JUMP_IF_FALSE 3389
LOAD args
PUSH_INT 0
INDEX
TCALL length
JUMP 3416
LOAD name
PUSH_STR "read_file"
EQ
JUMP_IF_FALSE 3398
LOAD args
PUSH_INT 0
INDEX
TCALL read_file
JUMP 3416
LOAD name
PUSH_STR "ascii"
EQ
JUMP_IF_FALSE 3407
LOAD args
PUSH_INT 0
INDEX
TCALL ascii
JUMP 3416
LOAD name
PUSH_STR "chr"
EQ
JUMP_IF_FALSE 3416
LOAD args
PUSH_INT 0
INDEX
TCALL chr
JUMP 3416
PUSH_STR "Unknown builtin: "
LOAD name
ADD
EMIT
PUSH_BOOL 0
RET
JUMP 3427
PUSH_STR "Not a function value"
EMIT
PUSH_BOOL 0
RET
RET
LOAD current_dir
LOAD path
CALL join_path
STORE full
PUSH_INT 0
STORE k
LOAD loaded_modules
BUILTIN length 1
STORE lm_len
LOAD k
LOAD lm_len
LT
JUMP_IF_FALSE 3459
LOAD loaded_modules
LOAD k
INDEX
LOAD full
EQ
JUMP_IF_FALSE 3454
PUSH_STR "Recursive import: "
LOAD full
ADD
EMIT
BUILD_DICT 0
RET
JUMP 3454
LOAD k
PUSH_INT 1
ADD
STORE k
JUMP 3437
LOAD loaded_modules
LOAD full
BUILD_LIST 1
ADD
STORE loaded_modules
LOAD full
BUILTIN read_file 1
STORE source
LOAD source
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD source
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD source
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD source
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 3533
PUSH_INT 6
STORE j
LOAD j
LOAD src_len
LT
LOAD source
LOAD j
INDEX
PUSH_STR "\n"
EQ
AND
JUMP_IF_FALSE 3527
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 3527
LOAD source
LOAD j
PUSH_NONE
SLICE
STORE source
JUMP 3533
LOAD current_dir
STORE saved_dir
LOAD full
CALL dirname
STORE current_dir
LOAD global_env
STORE saved_global
LOAD source
CALL parse
STORE ast
PUSH_STR "length"
PUSH_STR "builtin"
PUSH_STR "length"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "read_file"
PUSH_STR "builtin"
PUSH_STR "read_file"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "ascii"
PUSH_STR "builtin"
PUSH_STR "ascii"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "chr"
PUSH_STR "builtin"
PUSH_STR "chr"
BUILD_LIST 2
BUILD_LIST 2
BUILD_LIST 4
STORE env
LOAD env
PUSH_STR "args"
BUILD_LIST 0
CALL env_set
STORE env
LOAD env
STORE global_env
BUILD_LIST 0
STORE exports
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE stmt
LOAD ast
BUILTIN length 1
STORE ast_len
LOAD i
LOAD ast_len
LT
JUMP_IF_FALSE 3614
LOAD ast
LOAD i
INDEX
STORE stmt
LOAD stmt
PUSH_INT 0
INDEX
PUSH_STR "decl"
EQ
LOAD stmt
PUSH_INT 0
INDEX
PUSH_STR "func_def"
EQ
OR
JUMP_IF_FALSE 3609
LOAD exports
LOAD stmt
PUSH_INT 1
INDEX
BUILD_LIST 1
ADD
STORE exports
JUMP 3609
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3581
PUSH_BOOL 0
STORE _
LOAD ast
LOAD env
PUSH_BOOL 1
CALL execute
STORE _
LOAD global_env
STORE module_env
BUILD_DICT 0
STORE module_ns
PUSH_STR ""
STORE name
PUSH_BOOL 0
STORE val
PUSH_INT 0
STORE i
LOAD exports
BUILTIN length 1
STORE exp_len
LOAD i
LOAD exp_len
LT
JUMP_IF_FALSE 3685
LOAD exports
LOAD i
INDEX
STORE name
LOAD module_env
LOAD name
CALL lookup_var
PUSH_INT 1
INDEX
STORE val
LOAD val
PUSH_INT 0
INDEX
PUSH_STR "function"
EQ
LOAD val
PUSH_INT 3
INDEX
PUSH_STR "global"
EQ
AND
JUMP_IF_FALSE 3676
PUSH_STR "function"
LOAD val
PUSH_INT 1
INDEX
LOAD val
PUSH_INT 2
INDEX
LOAD module_env
BUILD_LIST 4
STORE val
LOAD module_env
LOAD name
LOAD val
CALL env_set
STORE module_env
JUMP 3676
LOAD module_ns
LOAD name
LOAD val
STORE_INDEX
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 3634
LOAD saved_dir
STORE current_dir
LOAD saved_global
STORE global_env
LOAD loaded_modules
PUSH_INT 0
LOAD lm_len
SLICE
STORE loaded_modules
LOAD module_ns
RET
RET
LOAD expr
PUSH_INT 0
INDEX
STORE kind
LOAD kind
PUSH_STR "number"
EQ
JUMP_IF_FALSE 3710
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4325
LOAD kind
PUSH_STR "string"
EQ
JUMP_IF_FALSE 3719
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4325
LOAD kind
PUSH_STR "bool"
EQ
JUMP_IF_FALSE 3728
LOAD expr
PUSH_INT 1
INDEX
RET
JUMP 4325
LOAD kind
PUSH_STR "ident"
EQ
JUMP_IF_FALSE 3756
LOAD expr
PUSH_INT 1
INDEX
STORE name
LOAD env
LOAD name
CALL lookup_var
STORE res
LOAD res
PUSH_INT 0
INDEX
JUMP_IF_FALSE 3749
LOAD res
PUSH_INT 1
INDEX
RET
JUMP 3749
PUSH_STR "Undefined variable: "
LOAD name
ADD
EMIT
PUSH_BOOL 0
RET
JUMP 4325
LOAD kind
PUSH_STR "add"
EQ
JUMP_IF_FALSE 3773
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
ADD
RET
JUMP 4325
LOAD kind
PUSH_STR "sub"
EQ
JUMP_IF_FALSE 3790
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SUB
RET
JUMP 4325
LOAD kind
PUSH_STR "mul"
EQ
JUMP_IF_FALSE 3807
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
MUL
RET
JUMP 4325
LOAD kind
PUSH_STR "div"
EQ
JUMP_IF_FALSE 3824
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
DIV
RET
JUMP 4325
LOAD kind
PUSH_STR "mod"
EQ
JUMP_IF_FALSE 3841
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
MOD
RET
JUMP 4325
LOAD kind
PUSH_STR "band"
EQ
JUMP_IF_FALSE 3858
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BAND
RET
JUMP 4325
LOAD kind
PUSH_STR "bor"
EQ
JUMP_IF_FALSE 3875
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BOR
RET
JUMP 4325
LOAD kind
PUSH_STR "bxor"
EQ
JUMP_IF_FALSE 3892
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
BXOR
RET
JUMP 4325
LOAD kind
PUSH_STR "shl"
EQ
JUMP_IF_FALSE 3909
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SHL
RET
JUMP 4325
LOAD kind
PUSH_STR "shr"
EQ
JUMP_IF_FALSE 3926
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
SHR
RET
JUMP 4325
LOAD kind
PUSH_STR "bitnot"
EQ
JUMP_IF_FALSE 3938
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
NOT
RET
JUMP 4325
LOAD kind
PUSH_STR "eq"
EQ
JUMP_IF_FALSE 3955
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
EQ
RET
JUMP 4325
LOAD kind
PUSH_STR "ne"
EQ
JUMP_IF_FALSE 3972
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
NE
RET
JUMP 4325
LOAD kind
PUSH_STR "lt"
EQ
JUMP_IF_FALSE 3989
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
LT
RET
JUMP 4325
LOAD kind
PUSH_STR "gt"
EQ
JUMP_IF_FALSE 4006
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
GT
RET
JUMP 4325
LOAD kind
PUSH_STR "le"
EQ
JUMP_IF_FALSE 4023
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
LE
RET
JUMP 4325
LOAD kind
PUSH_STR "ge"
EQ
JUMP_IF_FALSE 4040
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
GE
RET
JUMP 4325
LOAD kind
PUSH_STR "and"
EQ
JUMP_IF_FALSE 4061
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE left
LOAD left
JUMP_IF_FALSE 4058
LOAD expr
PUSH_INT 2
INDEX
LOAD env
TCALL eval_expr
JUMP 4058
PUSH_BOOL 0
RET
JUMP 4325
LOAD kind
PUSH_STR "or"
EQ
JUMP_IF_FALSE 4082
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE left
LOAD left
JUMP_IF_FALSE 4076
LOAD left
RET
JUMP 4076
LOAD expr
PUSH_INT 2
INDEX
LOAD env
TCALL eval_expr
JUMP 4325
LOAD kind
PUSH_STR "unary"
EQ
JUMP_IF_FALSE 4108
LOAD expr
PUSH_INT 1
INDEX
STORE op
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE val
LOAD op
PUSH_STR "sub"
EQ
JUMP_IF_FALSE 4105
PUSH_INT 0
LOAD val
SUB
RET
JUMP 4105
LOAD val
RET
JUMP 4325
LOAD kind
PUSH_STR "list"
EQ
JUMP_IF_FALSE 4144
LOAD expr
PUSH_INT 1
INDEX
STORE nodes
BUILD_LIST 0
STORE result
PUSH_INT 0
STORE i
LOAD nodes
BUILTIN length 1
STORE nodes_len
LOAD i
LOAD nodes_len
LT
JUMP_IF_FALSE 4141
LOAD result
LOAD nodes
LOAD i
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE result
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4123
LOAD result
RET
JUMP 4325
LOAD kind
PUSH_STR "dict"
EQ
JUMP_IF_FALSE 4197
LOAD expr
PUSH_INT 1
INDEX
STORE pairs
BUILD_DICT 0
STORE result
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE pair
PUSH_BOOL 0
STORE key
PUSH_BOOL 0
STORE val
LOAD pairs
BUILTIN length 1
STORE pairs_len
LOAD i
LOAD pairs_len
LT
JUMP_IF_FALSE 4194
LOAD pairs
LOAD i
INDEX
STORE pair
LOAD pair
PUSH_INT 0
INDEX
LOAD env
CALL eval_expr
STORE key
LOAD pair
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE val
LOAD result
LOAD key
LOAD val
STORE_INDEX
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4165
LOAD result
RET
JUMP 4325
LOAD kind
PUSH_STR "slice"
EQ
JUMP_IF_FALSE 4235
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE start
LOAD expr
PUSH_INT 3
INDEX
STORE end_node
LOAD end_node
JUMP_IF_FALSE 4229
LOAD end_node
LOAD env
CALL eval_expr
STORE end
LOAD base
LOAD start
LOAD end
SLICE
RET
JUMP 4229
LOAD base
LOAD start
PUSH_NONE
SLICE
RET
JUMP 4325
LOAD kind
PUSH_STR "index"
EQ
JUMP_IF_FALSE 4256
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE idx
LOAD base
LOAD idx
INDEX
RET
JUMP 4325
LOAD kind
PUSH_STR "dot"
EQ
JUMP_IF_FALSE 4275
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE base
LOAD expr
PUSH_INT 2
INDEX
STORE attr
LOAD base
LOAD attr
INDEX
RET
JUMP 4325
LOAD kind
PUSH_STR "func_call"
EQ
JUMP_IF_FALSE 4319
LOAD expr
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE func_val
LOAD expr
PUSH_INT 2
INDEX
STORE arg_nodes
BUILD_LIST 0
STORE args
PUSH_INT 0
STORE i
LOAD arg_nodes
BUILTIN length 1
STORE arg_len
LOAD i
LOAD arg_len
LT
JUMP_IF_FALSE 4314
LOAD args
LOAD arg_nodes
LOAD i
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE args
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4296
LOAD func_val
LOAD args
LOAD env
TCALL call_function
JUMP 4325
PUSH_STR "Unknown expr kind: "
LOAD kind
ADD
EMIT
PUSH_BOOL 0
RET
RET
PUSH_INT 0
STORE i
PUSH_BOOL 0
STORE stmt
PUSH_BOOL 0
STORE kind
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE res
LOAD stmts
BUILTIN length 1
STORE stmts_len
PUSH_BOOL 0
STORE cond
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE loop_res
PUSH_BOOL 0
STORE val
PUSH_STR ""
STORE name
BUILD_LIST 0
STORE params
BUILD_LIST 0
STORE body
PUSH_BOOL 0
STORE func_val
BUILD_LIST 0
STORE arg_nodes
BUILD_LIST 0
STORE call_args
PUSH_INT 0
STORE j
PUSH_INT 0
STORE arg_len
PUSH_BOOL 0
STORE obj
PUSH_STR ""
STORE attr
PUSH_BOOL 0
STORE idx
PUSH_BOOL 0
STORE _
LOAD i
LOAD stmts_len
LT
JUMP_IF_FALSE 4731
LOAD stmts
LOAD i
INDEX
STORE stmt
LOAD stmt
PUSH_INT 0
INDEX
STORE kind
LOAD kind
PUSH_STR "decl"
EQ
JUMP_IF_FALSE 4404
LOAD env
LOAD stmt
PUSH_INT 1
INDEX
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4403
LOAD env
STORE global_env
JUMP 4403
JUMP 4726
LOAD kind
PUSH_STR "assign"
EQ
JUMP_IF_FALSE 4425
LOAD env
LOAD stmt
PUSH_INT 1
INDEX
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4424
LOAD env
STORE global_env
JUMP 4424
JUMP 4726
LOAD kind
PUSH_STR "attr_assign"
EQ
JUMP_IF_FALSE 4448
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE obj
LOAD stmt
PUSH_INT 2
INDEX
STORE attr
LOAD obj
LOAD attr
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
CALL eval_expr
STORE_INDEX
JUMP 4726
LOAD kind
PUSH_STR "index_assign"
EQ
JUMP_IF_FALSE 4473
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE obj
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
CALL eval_expr
STORE idx
LOAD obj
LOAD idx
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
CALL eval_expr
STORE_INDEX
JUMP 4726
LOAD kind
PUSH_STR "emit"
EQ
JUMP_IF_FALSE 4484
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
EMIT
JUMP 4726
LOAD kind
PUSH_STR "facts"
EQ
JUMP_IF_FALSE 4502
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE cond
LOAD cond
JUMP_IF_FALSE 4499
PUSH_BOOL 0
STORE _
JUMP 4501
PUSH_STR "Assertion failed"
EMIT
JUMP 4726
LOAD kind
PUSH_STR "if"
EQ
JUMP_IF_FALSE 4549
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE cond
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE res
LOAD cond
JUMP_IF_FALSE 4526
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
LOAD is_global
CALL execute
STORE res
JUMP 4539
LOAD stmt
BUILTIN length 1
PUSH_INT 3
GT
JUMP_IF_FALSE 4539
LOAD stmt
PUSH_INT 3
INDEX
LOAD env
LOAD is_global
CALL execute
STORE res
JUMP 4539
LOAD res
PUSH_INT 0
INDEX
PUSH_STR "normal"
NE
JUMP_IF_FALSE 4548
LOAD res
RET
JUMP 4548
JUMP 4726
LOAD kind
PUSH_STR "loop"
EQ
JUMP_IF_FALSE 4589
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
STORE loop_res
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
JUMP_IF_FALSE 4588
LOAD stmt
PUSH_INT 2
INDEX
LOAD env
LOAD is_global
CALL execute
STORE loop_res
LOAD loop_res
PUSH_INT 0
INDEX
PUSH_STR "break"
EQ
JUMP_IF_FALSE 4578
JUMP 4588
JUMP 4587
LOAD loop_res
PUSH_INT 0
INDEX
PUSH_STR "return"
EQ
JUMP_IF_FALSE 4587
LOAD loop_res
RET
JUMP 4587
JUMP 4557
JUMP 4726
LOAD kind
PUSH_STR "break"
EQ
JUMP_IF_FALSE 4598
PUSH_STR "break"
PUSH_BOOL 0
BUILD_LIST 2
RET
JUMP 4726
LOAD kind
PUSH_STR "return"
EQ
JUMP_IF_FALSE 4613
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE val
PUSH_STR "return"
LOAD val
BUILD_LIST 2
RET
JUMP 4726
LOAD kind
PUSH_STR "func_def"
EQ
JUMP_IF_FALSE 4655
LOAD stmt
PUSH_INT 1
INDEX
STORE name
LOAD stmt
PUSH_INT 2
INDEX
STORE params
LOAD stmt
PUSH_INT 3
INDEX
STORE body
LOAD is_global
JUMP_IF_FALSE 4638
PUSH_STR "function"
LOAD params
LOAD body
PUSH_STR "global"
BUILD_LIST 4
STORE func_val
JUMP 4644
PUSH_STR "function"
LOAD params
LOAD body
LOAD env
BUILD_LIST 4
STORE func_val
LOAD env
LOAD name
LOAD func_val
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4654
LOAD env
STORE global_env
JUMP 4654
JUMP 4726
LOAD kind
PUSH_STR "import"
EQ
JUMP_IF_FALSE 4677
LOAD stmt
PUSH_INT 1
INDEX
CALL import_module
STORE obj
LOAD env
LOAD stmt
PUSH_INT 2
INDEX
LOAD obj
CALL env_set
STORE env
LOAD is_global
JUMP_IF_FALSE 4676
LOAD env
STORE global_env
JUMP 4676
JUMP 4726
LOAD kind
PUSH_STR "func_call"
EQ
JUMP_IF_FALSE 4722
LOAD stmt
PUSH_INT 1
INDEX
LOAD env
CALL eval_expr
STORE func_val
LOAD stmt
PUSH_INT 2
INDEX
STORE arg_nodes
BUILD_LIST 0
STORE call_args
PUSH_INT 0
STORE j
LOAD arg_nodes
BUILTIN length 1
STORE arg_len
LOAD j
LOAD arg_len
LT
JUMP_IF_FALSE 4716
LOAD call_args
LOAD arg_nodes
LOAD j
INDEX
LOAD env
CALL eval_expr
BUILD_LIST 1
ADD
STORE call_args
LOAD j
PUSH_INT 1
ADD
STORE j
JUMP 4698
LOAD func_val
LOAD call_args
LOAD env
CALL call_function
STORE _
JUMP 4726
PUSH_STR "Unknown statement: "
LOAD kind
ADD
EMIT
LOAD i
PUSH_INT 1
ADD
STORE i
JUMP 4371
PUSH_STR "normal"
PUSH_BOOL 0
BUILD_LIST 2
RET
RET
LOAD source
CALL parse
STORE ast
PUSH_STR "length"
PUSH_STR "builtin"
PUSH_STR "length"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "read_file"
PUSH_STR "builtin"
PUSH_STR "read_file"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "ascii"
PUSH_STR "builtin"
PUSH_STR "ascii"
BUILD_LIST 2
BUILD_LIST 2
PUSH_STR "chr"
PUSH_STR "builtin"
PUSH_STR "chr"
BUILD_LIST 2
BUILD_LIST 2
BUILD_LIST 4
STORE env
LOAD env
PUSH_STR "args"
LOAD args
CALL env_set
STORE env
LOAD env
STORE global_env
LOAD ast
LOAD env
PUSH_BOOL 1
TCALL execute
RET
LOAD args
STORE saved
LOAD current_dir
STORE old_dir
LOAD file_args
STORE args
LOAD path
CALL dirname
STORE current_dir
LOAD path
BUILTIN read_file 1
STORE source
LOAD source
BUILTIN length 1
STORE src_len
LOAD src_len
PUSH_INT 6
GE
LOAD source
PUSH_INT 0
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 1
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 2
INDEX
PUSH_STR ";"
EQ
AND
LOAD source
PUSH_INT 3
INDEX
PUSH_STR "o"
EQ
AND
LOAD source
PUSH_INT 4
INDEX
PUSH_STR "m"
EQ
AND
LOAD source
PUSH_INT 5
INDEX
PUSH_STR "g"
EQ
AND
JUMP_IF_FALSE 4852
LOAD source
PUSH_INT 6
PUSH_NONE
SLICE
STORE source
LOAD source
BUILTIN length 1
PUSH_INT 0
GT
JUMP_IF_FALSE 4851
LOAD source
PUSH_INT 0
INDEX
PUSH_STR "\n"
EQ
JUMP_IF_FALSE 4850
LOAD source
PUSH_INT 1
PUSH_NONE
SLICE
STORE source
JUMP 4850
JUMP 4851
JUMP 4852
LOAD source
CALL run
STORE res
LOAD old_dir
STORE current_dir
LOAD saved
STORE args
LOAD res
RET
RET
LOAD path
LOAD args
TCALL run_file_with_args
RET