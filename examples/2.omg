;;;omg

# Recursive factorial function with debugging output
bitchin factorial(n) {
    maybe n <= 1 {
        gimme 1
    } okthen {
        gimme n * factorial(n - 1)
    }
}

# Greeting function with conditional logic
bitchin greeting(name, excited) {
    maybe excited == 1 {
        gimme "Hey " + name + "! You're awesome!"
    } okthen {
        gimme "Hello " + name
    }
}

# Compose full message combining factorial and greeting
bitchin compose_message(name, num) {
    thingy fact := factorial(num)
    thingy excited := 0

    maybe num > 5 {
        excited := 1
    }

    gimme greeting(name, excited) + ", your factorial of " + num + " is " + fact
}

# Variables
thingy user := "Chris"
thingy number := 6

# Output composed message
thingy message := compose_message(user, number)
woah <- message

# Loop counting down with conditional inside
thingy countdown := number
roundabout countdown > 0 {
    maybe countdown % 2 == 0 {
        woah <- countdown + " is even"
    } okthen {
        woah <- countdown + " is odd"
    }
    countdown := countdown - 1
}

# Use string concatenation, arithmetic, and facts assertion
thingy sum := 0
thingy i := 1
roundabout i <= 10 {
    sum := sum + i
    i := i + 1
}

woah <- "Sum of 1 to 10 is " + sum